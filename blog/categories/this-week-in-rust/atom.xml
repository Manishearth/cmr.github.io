<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: this-week-in-rust | Ramblin's]]></title>
  <link href="http://cmr.github.io/blog/categories/this-week-in-rust/atom.xml" rel="self"/>
  <link href="http://cmr.github.io/"/>
  <updated>2013-11-19T03:13:52-05:00</updated>
  <id>http://cmr.github.io/</id>
  <author>
    <name><![CDATA[Corey Richardson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/11/19/this-week-in-rust/"/>
    <updated>2013-11-19T01:42:00-05:00</updated>
    <id>http://cmr.github.io/blog/2013/11/19/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>46 PRs were merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>std::rt::io</code> <a href="https://github.com/mozilla/rust/pull/10423">has moved on</a> to
become <code>std::io</code>. Yay!</li>
<li>The <code>#[fixed_stack_segment]</code> attribute <a href="https://github.com/mozilla/rust/pull/10407">has been
removed</a>.</li>
<li><code>as</code> casts to functions are <a href="https://github.com/mozilla/rust/pull/9788">no longer
allowed</a>.</li>
<li>The return value of the <code>io::process</code> is no longer an int, but <a href="https://github.com/mozilla/rust/pull/10109">an enum that
also represents termination by
signal</a>. It&rsquo;s also ostensibly
more portable: to check if a subprocess succeeded, just call <code>.success()</code> on
the return value.</li>
<li><code>std::cast::unsafe_copy</code> has <a href="https://github.com/mozilla/rust/pull/10497">has been
removed</a>. It is identical to
<code>std::ptr::read_ptr</code>.</li>
<li>Trailing <code>::</code> is <a href="https://github.com/mozilla/rust/pull/10420">no longer
allowed</a> in paths</li>
</ul>


<h2>Other Changes</h2>

<ul>
<li>Vectors have <a href="https://github.com/mozilla/rust/pull/10417">more overflow
checking</a>. This was the cause
of a few mysterious segfaults.</li>
<li>Crate maps <a href="https://github.com/mozilla/rust/pull/10422">can now be generated for
libraries</a>, for when you want to
embed a Rust library in a non-Rust application.</li>
<li>Creation of buffered readers/writers <a href="https://github.com/mozilla/rust/pull/10424">has been optimized a
bit</a>.</li>
<li>If you use OS X, you&rsquo;ll be happy to see that the frivolous &ldquo;no debug symbols
in executable&rdquo; warning <a href="https://github.com/mozilla/rust/pull/10198">has been stomped
out</a>.</li>
<li>The missing-documentation lint is <a href="https://github.com/mozilla/rust/pull/10277">now more
accepting</a>, and won&rsquo;t warn about
private items.</li>
<li><code>BufWriter</code>, an implementation of Writer for already-existing buffers, <a href="https://github.com/mozilla/rust/pull/10451">is
now implemented</a>.</li>
<li>The native IO backend has seen <a href="https://github.com/mozilla/rust/pull/10457">a good
boost</a>; it will now be
seamlessly fallen back to when the libuv backend isn&rsquo;t available (you can
test this out by adding <code>#[no_uv];</code> to your crates).</li>
<li>A lint for numeric literals which overflow their type <a href="https://github.com/mozilla/rust/pull/10018">has been
implemented</a>.</li>
<li>A <code>Buffer</code> trait <a href="https://github.com/mozilla/rust/pull/10466">has been
added</a> to <code>std::io</code>, with
<code>read_line</code>, <code>read_until</code>, and <code>read_char</code>.</li>
<li>The error message when the trait&rsquo;s method declaration and the method
declaration in the implementation aren&rsquo;t the same <a href="https://github.com/mozilla/rust/pull/10509">now includes the trait
name</a>.</li>
<li>The libuv bindings were <a href="https://github.com/mozilla/rust/pull/10321">largely
rewritten</a> for performance, at
the sacrifice of some flexibility (which was of questionable value).</li>
<li><code>_</code>-prefixed variables <a href="https://github.com/mozilla/rust/pull/10518">no
longer</a> get an unused <code>mut</code>
warning.</li>
</ul>


<h2>New Contributors</h2>

<p>Our first-time contributors this week are:</p>

<ul>
<li>Jaemin Moon</li>
<li>Jay Anderson</li>
<li>Joe Schafer</li>
<li>Matthew Iselin</li>
<li>Zach Kamsler</li>
</ul>


<h1>Weekly Meeting</h1>

<p>There was no meeting this week, as a bunch of the core developers were in
South Korea for the Servo workweek with Samsung.</p>

<h2>Announcements etc</h2>

<ul>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-November/006686.html">(ML) Rethinking Linking in
Rust</a></li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-November/006550.html">(ML) The future of M:N
threading</a></li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-November/006714.html">(ML) Type system
thoughts</a></li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-November/006431.html">(ML)Changing
roles</a>,
Tim&rsquo;s &ldquo;going-away&rdquo; post. He did great work on rustpkg, and I hope he finds
time to continue to contribute to Rust.</li>
<li><a href="http://blog.theincredibleholk.org/blog/2013/11/18/booting-to-rust/">Booting to Rust (with
UEFI)</a></li>
<li><a href="http://smallcultfollowing.com/babysteps/blog/2013/11/14/treating-vectors-like-any-other-container/">Treating Vectors Like Any Other
Container</a></li>
<li><a href="http://adrientetar.legtux.org/blog_fr.php?post=0">Moving forward with Rust
website</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[These Weeks in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/11/09/these-weeks-in-rust/"/>
    <updated>2013-11-09T05:21:00-05:00</updated>
    <id>http://cmr.github.io/blog/2013/11/09/these-weeks-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to a mega-<em>This Week in Rust</em>. I was swamped this past week with
schoolwork, so TWiR was put off. This week&rsquo;s combines the past two weeks of
progress. These past two weeks were fairly exciting in terms of language and
library progress. The next few weeks should be even more exciting.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>There were 108 PRs merged these past two weeks.</p>

<h2>Breaking Changes</h2>

<ul>
<li>The very long-awaited <a href="https://github.com/mozilla/rust/pull/9613">enum discriminant size
patch</a> has landed. This will
affect FFI. Size of enum discriminant is now configurable via the <code>repr</code>
attribute, and will by default shrink to the smallest needed.</li>
<li>The extension traits for <code>Reader</code> and <code>Writer</code> have <a href="https://github.com/mozilla/rust/pull/10079">been transformed into
default methods on their respective
trait</a>.</li>
<li>Non-string literals are now
<a href="https://github.com/mozilla/rust/pull/10166">disallowed</a> in attributes.</li>
<li>Type parameters are now
<a href="https://github.com/mozilla/rust/pull/10189">forbidden</a> on inner statics
(statics inside functions).</li>
<li>The interface to flush stdout <a href="https://github.com/mozilla/rust/pull/10218">has
changed</a>. It was previously
unsound by allowing aliased <code>&amp;mut</code>.</li>
<li><code>Result</code>&rsquo;s API has changed <a href="https://github.com/mozilla/rust/pull/10119">quite a
bit</a>, to be more consistent with
<code>Option</code>, and hopefully simpler.</li>
<li>Linker arguments <a href="https://github.com/mozilla/rust/pull/10199">no longer</a>
propagate across crates. This means that if you link to a crate, its linker
arguments won&rsquo;t be automatically added when your crate is linked.</li>
<li>The memory intrinsics <a href="https://github.com/mozilla/rust/pull/10251">have been
simplified</a>. A single intrinsic
for <code>memcpy</code>/<code>memmove</code>/<code>memset</code> is now exposed, rather than one per
    platform.</li>
<li><code>#[link(name = "...")]</code> is now <a href="https://github.com/mozilla/rust/pull/10260">taken into
account</a> by rustc when creating
build artifacts.</li>
<li><code>std::rt::io::file</code> <a href="https://github.com/mozilla/rust/pull/10179">has been fleshed out and
tweaked</a>. In particular, it has
been renamed to <code>std::rt::io::fs</code>, many previously-free functions are now
associated functions on <code>std::rt::io::File</code>, and <code>FileInfo</code> has been renamed
to <code>FileStat</code>.</li>
</ul>


<h2>Other Changes</h2>

<ul>
<li>Calling variadic functions with the C FFI <a href="https://github.com/mozilla/rust/pull/10064">is now
implemented</a>. This is a pretty
sweet change. The only thing missing in our C FFI now is unions.</li>
<li>We <a href="https://github.com/mozilla/rust/pull/10243">now have</a> octal numeric
literals, for all your esoteric numeric needs!</li>
<li>An <code>Any</code> type <a href="https://github.com/mozilla/rust/pull/9967">has been added</a>,
and it is now possible to retrieve the object a task failed with. Previously
tasks could only fail with a string, now they can fail with anything.</li>
<li>A <code>concat!</code> syntax extension <a href="https://github.com/mozilla/rust/pull/9740">has been
added</a> for compile-time string
concatenation.</li>
<li>Timers are <a href="https://github.com/mozilla/rust/pull/10083">now also ports</a>, and
the creator of a timer can cancel it.</li>
<li>As the first part of closure reform, <code>proc</code> is <a href="https://github.com/mozilla/rust/pull/10132">now sugar</a> for <code>~once
fn</code>, and <code>|A| -&gt; B</code> (and <code>fn(A) -&gt; B</code> for bare functions) <a href="https://github.com/mozilla/rust/pull/10187">are now
allowed</a> in types.</li>
<li>The section in the tutorial on vectors and strings <a href="https://github.com/mozilla/rust/pull/10354">has been
rewritten</a> for correctness with
modern Rust.</li>
<li>A bunch of C++ has been removed and rewritten. <a href="https://github.com/mozilla/rust/pull/10290">Thread
creation</a>, <a href="https://github.com/mozilla/rust/pull/10094">memory
regions</a> (used for debugging and
<code>@</code>-boxes, from what I can tell), and an <a href="https://github.com/mozilla/rust/pull/10163/files">unused
<code>array_list</code></a>.</li>
<li>Bounds check failures are <a href="https://github.com/mozilla/rust/pull/10113">now marked as a cold
path</a>, and a <code>cold</code> <a href="https://github.com/mozilla/rust/pull/10127">function
attribute</a> has been added.</li>
<li>The build system <a href="https://github.com/mozilla/rust/pull/10203">can cross-compile to iOS
now</a>, even though Rust doesn&rsquo;t
actually run on that platform (yet!).</li>
<li><code>std::rand</code> <a href="https://github.com/mozilla/rust/pull/10223">now implements the Gamma
distribution</a>.</li>
<li>Cross-crate destructor inlining <a href="https://github.com/mozilla/rust/pull/10242">now
works</a>.</li>
<li>A <code>type_id</code> intrinsic <a href="https://github.com/mozilla/rust/pull/10182">has been
added</a>.</li>
<li>Everything in the runtime that uses <code>libuv</code> has been <a href="https://github.com/mozilla/rust/pull/10058">split into its own
crate</a>. This means that the
runtime really is pluggable: you can implement your own event loop and so
forth.</li>
</ul>


<h2>New Contributors</h2>

<p>Welcome to our new contributors!</p>

<ul>
<li>Brian</li>
<li>Carol Willing</li>
<li>Dirkjan Bussink</li>
<li>Guillaume Pinot</li>
<li>Gyorgy Andrasek</li>
<li>Joshua Yanovski</li>
<li>Mat Carberry</li>
<li>Noufal Ibrahim</li>
<li>Robert Irelan</li>
<li>Tomas Sedovic</li>
<li>Jennifer Ward</li>
<li>Patrick Kim</li>
</ul>


<p>At .85 new contributors a day, we&rsquo;ll soon dwarf every other language in the
&ldquo;awesome volunteer&rdquo; category.</p>

<h1>Weekly Meetings</h1>

<p>Last week&rsquo;s
<a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-10-29">meeting</a>
discussed segmented stacks (spoiler: <a href="https://mail.mozilla.org/pipermail/rust-dev/2013-November/006314.html">they&rsquo;re not coming
back</a> )
and placement new (we want it, how do we want it?).</p>

<p>This week&rsquo;s
<a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-11-05">meeting</a>
discussed the future of libextra, more stack things, octal literals, vector
representation, and temporary (&ldquo;rvalue&rdquo;) lifetimes.</p>

<h1>Announcements etc</h1>

<ul>
<li><strong>Reminder from <del>the Ministry of Truth</del> ChrisMorgan</strong>: Rust is awesome.</li>
<li>Rust Skåne, <a href="http://www.foocafe.org/event/a-friendly-introduction-to-rust">has an event page
now</a>. It will
be December 3 at 17:30 in Foo Cafe.</li>
<li><a href="http://smallcultfollowing.com/babysteps/blog/2013/10/29/intermingled-parameter-lists/">Integermingled Parameter
Lists</a>,
and <a href="http://smallcultfollowing.com/babysteps/blog/2013/11/04/intermingled-parameter-lists/">take
2</a>.</li>
<li><a href="https://github.com/haxney/speculate">speculate</a> &ndash; a parallel speculative
execution library.</li>
<li><a href="https://github.com/luqmana/mcchat">mcchat</a> &ndash; a pure-Rust Minecraft chat
client.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/10/28/this-week-in-rust/"/>
    <updated>2013-10-28T16:20:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/10/28/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust!</em> This week marks the addition
of some more feature gates, removal of <code>std::io</code>, and some feature proposals.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>47 PRs were merged this week, and we passed issue number 10000.</p>

<h2>Breaking Changes</h2>

<ul>
<li>Most of the crypto in the stdlib <a href="https://github.com/mozilla/rust/pull/9744">has been
removed</a>.</li>
<li><code>std::io</code> <a href="https://github.com/mozilla/rust/pull/9901">has been removed</a>,
with corresponding improvements in <code>std::rt::io</code>.</li>
<li>The <code>frame_address</code> intrinsic <a href="https://github.com/mozilla/rust/pull/10040">has been
removed</a>.</li>
<li><code>@</code>-ptrs are <a href="https://github.com/mozilla/rust/pull/9923">now feature-gated</a>,
reflecting the fact that they will exist in a very different form once they
are finished.</li>
<li>All of the logging that used <code>fmt</code> (<code>debug!</code> and so forth) <a href="https://github.com/mozilla/rust/pull/10006">have been
transitioned to <code>format!</code></a>.</li>
<li><code>asm!</code> <a href="https://github.com/mozilla/rust/pull/10009">is also featured gated</a>.</li>
<li><code>sys::log_str</code> <a href="https://github.com/mozilla/rust/pull/9937">has moved</a>.</li>
</ul>


<h2>Other changes</h2>

<ul>
<li>The long-awaited addition of <code>mut</code> in patterns <a href="https://github.com/mozilla/rust/pull/10026">has finally
happened</a>. <code>let (mut x, y) = (1,
2);</code> works.</li>
<li>The scheduler now uses <a href="https://github.com/mozilla/rust/pull/10080">lock free data
structures</a>, which are supposed
to perform much better.</li>
<li>The homing code <a href="https://github.com/mozilla/rust/pull/10070">now does less
work</a>, which does one third as
many <code>write</code>&rsquo;s.</li>
<li><code>stdout</code> <a href="https://github.com/mozilla/rust/pull/10060">is now buffered</a>.</li>
<li>A <a href="https://github.com/mozilla/rust/pull/10054">non-libuv event loop</a> has
been added.</li>
<li><code>std::rand</code> has seen <a href="https://github.com/mozilla/rust/pull/9810">more</a>
<a href="https://github.com/mozilla/rust/pull/10015">work</a>.</li>
<li><code>rustpkg</code> <a href="https://github.com/mozilla/rust/pull/9654">now supports arbitrary
dependencies</a>, such as C
libraries.</li>
<li><code>mut</code> is <a href="https://github.com/mozilla/rust/pull/9989">now allowed on self</a>.</li>
<li>Nested comments <a href="https://github.com/mozilla/rust/pull/9936">are now
allowed</a>.</li>
<li><code>rustpkg</code> will now [find crates in the current directory], so you can say
<code>rustpkg build</code> in a source dir and it will build in a workspace.</li>
<li>Some new float intrinsics <a href="https://github.com/mozilla/rust/pull/9986">have been
exposed</a>.</li>
<li><code>println!</code> <a href="https://github.com/mozilla/rust/pull/9979">allocates less</a>.</li>
</ul>


<h2>New contributors</h2>

<ul>
<li>Igor Bukanov</li>
<li>Mark Rowe</li>
<li>Michael Letterle</li>
<li>reedlepee</li>
</ul>


<h1>Announcements etc</h1>

<ul>
<li>There will be a
<a href="http://www.meetup.com/Rust-Bay-Area/events/143439552/">meetup</a> in the San
Fransisco Mozilla office. Patrick Walton will be talking about sprocketnes.
If you&rsquo;re in the area, you should definitely go!</li>
<li><a href="http://hiho.io/rust-ci/">rust-ci</a> has been created, which lets you have
travis automatically rebuild and test your repo daily, to reduce
language/library breakage.</li>
<li><a href="https://github.com/erickt/rust-mustache">rust-mustache</a> and
<a href="https://github.com/erickt/rust-zmq">rust-zmq</a> have been updated for master.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1pdrv6/short_talk_about_rust_at_scalaio_in_paris_october/">Short talk about Rust at Scala.IO in Paris (October
25th)</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1pe2lc/a_bit_of_functional_programming_in_rust_or_a/">A Bit of Functional Programming in Rust, or A Misguided First Look at Rust
for ML
    Programmers</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1p52tj/a_draft_proposal_for_single_inheritance_in_rust/">A draft proposal for single
inheritance</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1p4vnk/iterators_yielding_mutable_references/">Iterators yielding mutable
references</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1p4qeh/servo_transitions_from_libcss_to_a_new_css/">Servo transitions from libcss to a new CSS library written in
Rust</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1owhwi/on_stack_safety/">On stack
safety</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/10/19/this-week-in-rust/"/>
    <updated>2013-10-19T10:49:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/10/19/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>, a weekly summary of Rust&rsquo;s
progress and happenings in the community.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>48 PRs were merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li>Slices are now represented as <a href="https://github.com/mozilla/rust/pull/9885">number of elements, not number of
bytes</a>.</li>
<li><code>fmt!</code> has been <a href="https://github.com/mozilla/rust/pull/9919">completely
removed</a>.</li>
<li>Some fields in <code>std::comm</code> <a href="https://github.com/mozilla/rust/pull/9935">have been made
private</a>.</li>
<li><code>std::sys::refcount</code> <a href="https://github.com/mozilla/rust/pull/9922">has been
moved</a> to
<code>std::managed::refcount</code>.</li>
<li><a href="https://github.com/mozilla/rust/pull/9896/files#diff-69196c6d2488bf8d5b3471084e854407L22">A bunch of
functions</a>
have moved from <code>std::sys</code> to <code>std::mem</code>.</li>
<li><code>once fn</code> is <a href="https://github.com/mozilla/rust/pull/9863">now a feature gate</a>
rather than a <code>-Z</code> flag.</li>
<li><code>Path</code> has been <a href="https://github.com/mozilla/rust/pull/9655">completely
rewritten</a>.</li>
<li><code>extra::flatpipes</code> <a href="https://github.com/mozilla/rust/pull/9886">has been
removed</a>.</li>
</ul>


<h2>Other changes</h2>

<ul>
<li><code>jemalloc</code> has been <a href="https://github.com/mozilla/rust/pull/9933">removed from the
runtime</a>. The <a href="https://github.com/mozilla/rust/issues/9925">associated
issue</a> is quite scary.</li>
<li><code>rustdoc</code> <a href="https://github.com/mozilla/rust/pull/9946">struct field
visibility</a> is now corrected (it
stripped fields where it should not have).</li>
<li><code>rustdoc</code> also <a href="https://github.com/mozilla/rust/pull/9941">uses the actual privacy
rules</a> to strip methods.</li>
<li><code>format!</code> now gives <a href="https://github.com/mozilla/rust/pull/9932">much better</a>
error messages for invalid format strings.</li>
<li>The <code>fmt::Default</code> trait, used for default formatting with <code>format!</code>, is
<a href="https://github.com/mozilla/rust/pull/9938">now documented</a>.</li>
<li><code>include_bin!</code> has been optimized, and the <code>k-nucleotides</code> benchmark now
compiles <a href="https://github.com/mozilla/rust/pull/9851">187x faster</a>.</li>
<li>Vectors now have <a href="https://github.com/mozilla/rust/pull/9907"><code>starts_with</code> and <code>ends_with</code>
methods</a>, which take slices.</li>
<li>An <code>abort</code> intrinsic <a href="https://github.com/mozilla/rust/pull/9860">has been
added</a>.</li>
<li>Vectors now have a <a href="https://github.com/mozilla/rust/pull/9608"><code>get_opt</code>
method</a>.</li>
</ul>


<h2>New contributors</h2>

<p>A new section for new contributors! The new contributors this week are (as
reported by git):</p>

<ul>
<li>Chris Sainty</li>
<li>Eduard Burtescu</li>
<li>Erik Lyon</li>
<li>Harry Marr</li>
<li>Sébastien Chauvel</li>
<li>Vijay Korapaty</li>
<li>Ziad Hatahet</li>
<li>chitra</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-10-15">weekly
meeting</a>
discussed removing rusti, changing the attribute syntax, destructors in
statics, and more multi-crate packages with rustpkg.</p>

<h1>Announcements etc</h1>

<ul>
<li>Rust (and Servo) are participating in the <a href="https://groups.google.com/forum/#!topic/mozilla.dev.servo/7kX_E0FlfkA">GNOME Outreach Program for
Women</a>.
A bunch of people have already come into IRC about it.</li>
<li><a href="http://exercism.io">http://exercism.io</a> <a href="https://github.com/kytrinyx/exercism.io/pull/866">is getting full Rust
support</a>. This is a very
cool resource, and could help a lot getting newcomers acclimated.</li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-October/006034.html">Unified Function/method Call Syntax and further
simplification</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1osbq2/safe_manual_memory_management_in_cyclone_research/">Safe Memory Management in
Cyclone</a>.</li>
<li><a href="http://opensourcebridge.org/sessions/970">Audio</a> from Tim&rsquo;s talk in June is
finally available!</li>
<li>An
<a href="https://github.com/mozilla/rust/wiki/Operating-system-development">OSdev</a>
community has sprung up! The channel is <code>#rust-osdev</code>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1omw47/should_io_use_conditions/">Should I/O use
conditions?</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1opo36/pointers_in_rust_a_guide/">Pointers in Rust: A
Guide</a>.</li>
<li>I am on a <a href="http://cmr.github.io/blog/2013/10/14/rust-hiatus/">Rust hiatus</a>,
for the time being. TWiR will still be happening, as you are reading it
right now.</li>
<li><a href="https://github.com/thestinger/rust-core">rust-core</a> &ndash; A stub standard
library.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/10/12/this-week-in-rust/"/>
    <updated>2013-10-12T22:53:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/10/12/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>. This week introduces raw
string literals, the removal of the <code>rust</code> tool, feature gating, and the
privacy overhaul.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>Only 51 PRs were merged this week, though the ones that were were fairly
large.</p>

<h2>Breaking changes</h2>

<ul>
<li>Visibility and privacy have been defined, and the new semantics are slightly
incompatible with the old. The details are
<a href="https://github.com/mozilla/rust/pull/9735">here</a>.</li>
<li>Feature gating has been <a href="https://github.com/mozilla/rust/pull/9703">added to the
compiler</a>. This allows us to
mask language features that we don&rsquo;t want to commit to for 1.0. The compiler
will tell you when you are using an &ldquo;experimental&rdquo; feature. The current
experimentals are glob imports, macro definitions, and struct-like variants
in enums. This is an important step forward for 1.0 which,
<a href="http://www.reddit.com/r/rust/comments/1o90f9/fn_types_in_rust_take_3/ccq8qev">apparently</a>,
is right around the corner.</li>
<li>The <code>rust</code> tool <a href="https://github.com/mozilla/rust/pull/9785">has been
removed</a>.</li>
<li><code>Option</code>&rsquo;s API has been <a href="https://github.com/mozilla/rust/pull/9359">massively
simplified</a>, and changed to be
composable.</li>
<li>Strings are <a href="https://github.com/mozilla/rust/pull/9750">no longer allowed to be modified in safe
code</a>. Things like <code>let s =
~"abcdefg"; s[4] = 0x99;</code> are now rejected. This is because it allows one to
create invalid (non-UTF8) string values.</li>
<li><code>extra::rc</code> has <a href="https://github.com/mozilla/rust/pull/9794">graduated to
<code>std::rc</code></a>.</li>
<li><code>extra::tempfile::mkdtemp</code> <a href="https://github.com/mozilla/rust/pull/9802">has been replaced with an RAII
wrapper</a>.</li>
<li><code>std::rand</code> <a href="https://github.com/mozilla/rust/pull/9695">has been improved</a>,
but changes the public API of Rng a bit.</li>
<li><code>IntConvertible</code> has been removed in favor of <a href="https://github.com/mozilla/rust/pull/9250"><code>ToPrimitive</code> and
<code>FromPrimitive</code></a>, which can be
derived for enums, making interacting with C APIs substantially more
<a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a>.</li>
</ul>


<h2>Other changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/9674">Raw strings</a> are now supported.
The basic syntax is <code>r"Foo"</code>, but also <code>r###"Foo"###</code>, for arbitrary
nesting of raw strings.</li>
<li>rustpkg&rsquo;s remote fetching <a href="https://github.com/mozilla/rust/pull/9741">is
fixed</a>, but <a href="https://github.com/mozilla/rust/issues/9482">other
</a>
<a href="https://github.com/mozilla/rust/issues/9781">problems</a> prevent it from
being fully usable right now.</li>
<li>debuginfo namespace handling <a href="https://github.com/mozilla/rust/pull/9658">has been
unified</a>, and marks the ability
to build all of Rust (libstd, libextra, compiler and tools) with debuginfo,
which is very awesome.</li>
<li>Small structs <a href="https://github.com/mozilla/rust/pull/9759">are immediate</a>.</li>
<li>When there are unbalanced delimiters, <a href="https://github.com/mozilla/rust/pull/9756">the opening delimiters leading up to
it</a> are printed, avoiding the
&ldquo;Expected a }, saw EOF at line 9001&rdquo; problem.</li>
<li>libuv and jemalloc are only <a href="https://github.com/mozilla/rust/pull/9772">built once, rather than once per
stage</a>.</li>
<li>Macros <a href="https://github.com/mozilla/rust/pull/9753">now take attributes</a> and,
in turn, can be documented.</li>
<li>In the opposite direction, <a href="https://github.com/mozilla/rust/pull/9783">macros can now expand to items with
attributes</a>.</li>
<li>There were some <a href="https://github.com/mozilla/rust/pull/9664">minor logging
changes</a>, the biggest result of
which is that inlined functions won&rsquo;t be logged by the modules they&rsquo;re
inlined into.</li>
<li><a href="https://github.com/mozilla/rust/pull/9749"><code>std::rt::io::native</code> has been
implemented</a>. The idea of this is
to live in <code>std::io::native</code> and to use the OS&rsquo;s native APIs rather than
libuv, and also to not require the scheduler or any other runtime support.</li>
<li>rustpkg <a href="https://github.com/mozilla/rust/pull/9732">marks checked out repos as
read-only</a>, to prevent
modifications.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-10-08">weekly
meeting</a>
discussed some administrative things, the removal of crypto code, the removal
of the <code>rust</code> tool, and functions.</p>

<h1>Announcements etc</h1>

<ul>
<li><a href="http://www.reddit.com/r/rust/comments/1o35ns/fuse_userspace_library_in_rust/">rust-fuse</a>
- a FUSE userspace library in Rust. This is pure Rust, not using libfuse.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1o46cv/ears_a_simple_library_for_playing_sounds/">ears</a>
- a simple library for playing sounds.</li>
<li><a href="https://github.com/pcmattman/rustic">rustic</a> &ndash; another operating system
project.</li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-October/005981.html">Refactoring the milestones on the issue
tracker</a>.</li>
<li><a href="http://smallcultfollowing.com/babysteps/blog/2013/10/10/fn-types-in-rust/">Fn Types in Rust, Take
3</a>
- another attempt at tackling the problems with closures.</li>
<li>mcpherrin in <code>#rust</code> says &ldquo;Hello, everyone!&rdquo;</li>
</ul>

]]></content>
  </entry>
  
</feed>
