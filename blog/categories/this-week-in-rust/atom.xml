<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: this-week-in-rust | Ramblin's]]></title>
  <link href="http://cmr.github.io/blog/categories/this-week-in-rust/atom.xml" rel="self"/>
  <link href="http://cmr.github.io/"/>
  <updated>2013-09-30T17:48:14-04:00</updated>
  <id>http://cmr.github.io/</id>
  <author>
    <name><![CDATA[Corey Richardson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/30/this-week-in-rust/"/>
    <updated>2013-09-30T13:11:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/30/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>! This week saw the release of
0.8, the removal of <code>@fn</code>, and a bunch of other changes. The tutorial has been
updated significantly, surrounding pointers and boxes, so you should re-read
those sections if you&rsquo;re still feeling shaky on when you should use which.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>There were 79 PRs merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>printf!</code> and <code>printfln!</code> have been
<a href="https://github.com/mozilla/rust/pull/9550">removed</a>.</li>
<li><code>continue</code> is now a keyword, a <a href="https://github.com/mozilla/rust/pull/9504">synonym for
<code>loop</code></a>, preceeding <code>loop</code>&rsquo;s
removal (<a href="https://github.com/mozilla/rust/issues/9467">https://github.com/mozilla/rust/issues/9467</a>)</li>
<li>Item visibility is <a href="https://github.com/mozilla/rust/pull/9432">properly encoded in
metadata</a>, so code which used
private items that may have worked before is now rejected.</li>
<li>Char literals which should have been escaped <a href="https://github.com/mozilla/rust/pull/9335">are now rejected when they
aren&rsquo;t escpated</a>.</li>
<li><code>impl Foo for T;</code> is now <a href="https://github.com/mozilla/rust/pull/9336">disallowed</a>.
Use <code>impl Foo for T {}</code>.</li>
<li><code>@fn</code> has been <a href="https://github.com/mozilla/rust/pull/9310">removed from the
language</a>. Replace it with
<code>@Trait</code> objects, if you really need <code>@fn</code> (you probably don&rsquo;t).</li>
<li><code>start</code> <a href="https://github.com/mozilla/rust/pull/9301">no longer takes a crate
map</a>.</li>
<li>Some more keywords have been
<a href="https://github.com/mozilla/rust/pull/9389">reserved</a>: <code>alignof</code>,
<code>offsetof</code>, and <code>sizeof</code>.</li>
</ul>


<h2>Everything else</h2>

<ul>
<li>A ton of documentation work was put in this wee. The box section of the
tutorial has been <a href="https://github.com/mozilla/rust/pull/9589">rewritten</a>,
and there&rsquo;s a new <a href="https://github.com/mozilla/rust/pull/9439">rustpkg
tutorial</a> too. The module
tutorial saw the file section
<a href="https://github.com/mozilla/rust/pull/9398">extended</a>. There was a bunch of
module documentation updated/added too.</li>
<li>rustdoc(_ng) also saw a lot of work. It <a href="https://github.com/mozilla/rust/pull/9402">completely
replaced</a> the old rustdoc, as
well as seeing a <a href="https://github.com/mozilla/rust/pull/9577">lot</a> of
<a href="https://github.com/mozilla/rust/pull/9475">fixes</a>. Huge thanks to Alex
Crichton for all the work with it!</li>
<li><code>std::vec</code> has seen some <a href="https://github.com/mozilla/rust/pull/9583">nice
changes</a> to <code>connect_vec</code> and
<code>concat_vec</code> (they were really awful before).</li>
<li><code>rustpkg test</code> is <a href="https://github.com/mozilla/rust/pull/9549">implemented</a>.</li>
<li><code>type_use</code> has been <a href="https://github.com/mozilla/rust/pull/9538">removed</a>.
This did some nasty things and LLVM&rsquo;s <code>mergefunc</code> pass will do a better job
of the same optimization (once it&rsquo;s enabled).</li>
<li><code>with_c_str</code> is now <a href="https://github.com/mozilla/rust/pull/9352">optimized</a>
to be allocation-free for short vectors.</li>
<li>The logging system, when using the new formatting code (so <code>debug2</code> etc) is
<a href="https://github.com/mozilla/rust/pull/9261">allocation-free</a>.</li>
<li><code>std::rand</code> has seen some
<a href="https://github.com/mozilla/rust/pull/9362">cleanup</a>, in preparation for its
overhaul.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-24">weekly
meeting</a>
discussed a bunch of things, the main things of importance to me being:</p>

<ul>
<li><code>loop</code> &ndash;> <code>continue</code></li>
<li>Allowing nested comments</li>
</ul>


<h1>Announcements</h1>

<ul>
<li><a href="https://github.com/kenz-gelsoft/wxRust">wxRust</a> &ndash; A binding to the
wxWidgets toolkit.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1neu74/the_start_of_a_sinatra_clone/">widmann</a>
-  A Sinatra clone</li>
<li><a href="http://www.reddit.com/r/rust/comments/1nab2s/rustdev_opengl_glrs_updated_with_command_line/">gl-rs</a>
has been updated to generate only bindings for a select version / set of
extensions.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1n8y5b/debugging_rust_in_eclipse/">Debugging Rust in
Eclipse</a>debugging_rust_in_eclipse)
- Michael Woerister&rsquo;s final GSoC post. He did really great work this summer!</li>
<li><a href="https://github.com/steveklabnik/rust_for_rubyists">Rust for Rubyists</a> has
been open sourced!</li>
<li>The <a href="https://code.google.com/p/claymore-game/">Claymore</a> project has just
come to my attention. Apparently it has been going on for quite some time.
There are some screenshots at <a href="http://claymore-dev.blogspot.com/">http://claymore-dev.blogspot.com/</a>.</li>
<li>[rustenstein3d] &ndash; a Wolfenstein3D engine</li>
<li><a href="https://github.com/eevee/clio">clio</a>, a roguelike. This one also slipped
under my radar for a while.</li>
<li><a href="https://github.com/thestinger/rust-gmp">rust-gmp</a> has been updated for
0.8/master.</li>
<li><a href="https://github.com/cmr/rustdoc_ng">rustdoc_ng</a>, being merged into mainline,
has concluded as a project.</li>
<li>And, of course, the <a href="http://www.reddit.com/r/rust/comments/1n7q8v/08_released/">0.8
release</a>
discussion on reddit.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/23/this-week-in-rust/"/>
    <updated>2013-09-23T13:08:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/23/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>. We&rsquo;re gearing up for a 0.8
release, tentatively planned for Thursday. Additionally, a huge welcome of
Alex Crichton to the Rust team! He&rsquo;s been doing some great work, it&rsquo;s
wonderful to have another full-time Rust dev.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>There were 86 PRs merged this week.</p>

<h2>rustdoc_ng</h2>

<p>rustdoc_ng was merged into mainline and enabled as the new rustdoc, in time
for 0.8. This makes me incredibly happy, as it marks the conclusion of my
quest to a better rustdoc. Not to say that rustdoc is finished or perfect,
but it&rsquo;s already much better than the old rustdoc. My sincere thanks go to
Jordi Boggiano (Seldaek), who worked unceasingly to create a beautiful,
usable frontend, and to Meret Vollenweider (meretv) for donating her amazing
design skills. Also thanks to Huon Wilson (dbaupp) for moral support and
creating the awesome DocFolder interface that passes over the documentation
use. And, of course, to Alex Crichton, who pushed these past few days to port
the static site generator to Rust and to integrate it into the build system.</p>

<p>The new docs have replaced the old docs. You can view them <a href="http://static.rust-lang.org/doc/master/std/index.html">on the Rust
website</a>. Still to-do
is proper cross-crate doc hyperlinking. To run it on your own crate, build a
recent Rust and do <code>rustdoc html path/to/your/crate.rs</code>. It will eventually be
integrated into <code>rustpkg</code>.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>extra::par</code> has been <a href="https://github.com/mozilla/rust/pull/9380">removed</a>.</li>
<li>Some unsound functional struct updates (FSU, <code>{a: 5, ..b}</code>) <a href="https://github.com/mozilla/rust/pull/9350">are now
disallowed</a>.</li>
<li><code>--cfg debug</code> is no longer required. If you want to disable debug logging,
use <a href="https://github.com/mozilla/rust/pull/9278"><code>--cfg ndebug</code></a>.</li>
<li>The various uses of <code>NaN</code> are now <a href="https://github.com/mozilla/rust/pull/9321">lowercased to
<code>nan</code></a>.</li>
<li><code>std::util::unreachable</code> has been removed in factor of the
<a href="https://github.com/mozilla/rust/pull/9320"><code>unreachable!</code></a> macro.</li>
<li><code>extra::future</code> has been <a href="https://github.com/mozilla/rust/pull/9285">cleaned
up</a> a bit, including some method
shuffling/renames.</li>
<li><code>extra::getopts</code> has been <a href="https://github.com/mozilla/rust/pull/9267">cleaned
up</a> as well, with most free
functions now being methods.</li>
<li>The <code>from_str</code> methods in the numeric modules have been
<a href="https://github.com/mozilla/rust/pull/9275">removed</a> in favor of the FromStr
trait and the <code>from_str</code> free function in the prelude. Same for
<a href="https://github.com/mozilla/rust/pull/9209"><code>from_str_radix</code></a>.</li>
<li>The <code>Drop</code> trait now uses <a href="https://github.com/mozilla/rust/pull/9244"><code>&amp;mut
self</code></a>, as part of the transition
to by-value drops.</li>
<li><code>extra::json</code> uses a <a href="https://github.com/mozilla/rust/pull/9231">different
encoding</a> when encoding/decoding
enums, so any Rust-generated JSON before this patch will now be rejected by
the decoder.</li>
</ul>


<h2>Other changes</h2>

<ul>
<li>debuginfo now works for <a href="https://github.com/mozilla/rust/pull/9168">recursive
types</a>.</li>
<li>You can now <a href="https://github.com/mozilla/rust/pull/9213">pass parameters</a> to
the generated test with <code>rust test</code>.</li>
<li><code>extern fn</code>s from external crates now use the <a href="https://github.com/mozilla/rust/pull/9196">declared
ABI</a>, rather than assuming cdecl.</li>
<li><code>CString</code> has gained an
<a href="https://github.com/mozilla/rust/pull/9220"><code>as_str</code></a> method.</li>
<li>Some <a href="https://github.com/mozilla/rust/pull/9108">overflow bugs</a> in <code>vec</code> and
<code>str</code> have been fixed.</li>
<li><code>statics</code> are now <a href="https://github.com/mozilla/rust/pull/9130">properly
inlined</a> cross-crate.</li>
<li>The <code>bytes!</code> macro&rsquo;s error reporting has been <a href="https://github.com/mozilla/rust/pull/9245">tightened
up</a> to make it more obvious where
the error is.</li>
<li><code>rustpkg init</code> <a href="https://github.com/mozilla/rust/pull/9236">has been added</a>,
to create a new workspace.</li>
<li>File IO in newrt has been <a href="https://github.com/mozilla/rust/pull/9235">massively
reworked</a> and is much more
complete than the oldrt.</li>
<li>The exact meaning of &ldquo;unsafety&rdquo; <a href="https://github.com/mozilla/rust/pull/9258">is now
documented</a>.</li>
<li><code>\0</code> escapes in strings <a href="https://github.com/mozilla/rust/pull/9248">is now
supported</a>.</li>
<li><code>rustpkg</code> now thinks in terms of crates, not packages, to you can now have
<a href="https://github.com/mozilla/rust/pull/9263">multiple crates in a single
package</a> and have things work
correctly.</li>
<li>newrt has <a href="https://github.com/mozilla/rust/pull/9260/files">pipes and process
support</a> now.</li>
<li><code>format!</code> now allows <a href="https://github.com/mozilla/rust/pull/9299">trailing
commas</a> in its arguments.</li>
<li>The lexer now throws <a href="https://github.com/mozilla/rust/pull/9308">vastly better
errors</a>.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-17">weekly
meeting</a>
discussed quite a bit, most interesting to me was the crypto discussion,
putting <code>macro_rules!</code> behind an experimental flag, and the default arguments
discussion.</p>

<h1>Project announcements etc</h1>

<ul>
<li><a href="https://github.com/williamw520/rustymem">rustymem</a> &ndash; a pure-rust memcached
library.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1myesy/where_to_learn_more_about_rusts_concurrency_model/">&ldquo;Where to learn more about Rust&rsquo;s concurrency
model?&rdquo;</a></li>
<li><a href="https://raw.github.com/jeaye/q3/master/pics/016_1_animated_skele.png">q3 now has skeletal
animation!</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/15/this-week-in-rust/"/>
    <updated>2013-09-15T17:59:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/15/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to another issue of <em>This Week in Rust</em>. We&rsquo;re gearing up
for the 0.8 release in 2-3 weeks. It looks like it&rsquo;s going to be a really
solid release. I&rsquo;ll write another <code>State of Rust</code>, hopefully before it is
released.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>68 PRs were merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>std::iterator</code> <a href="https://github.com/mozilla/rust/pull/9065">has been
renamed</a> to <code>std::iter</code>.</li>
<li>The <code>std::num::Primitive</code> trait is <a href="https://github.com/mozilla/rust/pull/9051">now
constrained</a> by the <code>Clone</code> and
<code>DeepClone</code> traits, as well as
<a href="https://github.com/mozilla/rust/pull/9182"><code>Orderable</code></a>.</li>
<li>Some <a href="https://github.com/mozilla/rust/pull/9062">more free functions</a> have
been removed from <code>std::vec</code>. <code>unzip</code> now takes an iterator, a
<code>Permutations</code> iterator has been added, and some rarely-used, obsolete,
functions were removed.</li>
<li>A bunch of changes to <code>Option</code> and <code>Result</code> <a href="https://github.com/mozilla/rust/pull/9115">were
made</a>. Specifically, <code>chain</code> was
changed to <code>and_then</code> and <code>unwrap_or_default</code> to <code>unwrap_or</code>.</li>
<li>rustpkg <a href="https://github.com/mozilla/rust/pull/9151">builds into
target-specific</a> subdirectories
now.</li>
</ul>


<h2>Additions and fixes</h2>

<ul>
<li>debuginfo now has <a href="https://github.com/mozilla/rust/pull/9097">namespace
support</a>. Looking at all the
various PRs Michael has opened over the summer, it seems DWARF is a very
flexible, nice debuginfo format, but gdb and LLVM don&rsquo;t support it very
well.</li>
<li>Correct <code>range_step</code> and <code>range_step_inclusive</code> iterators <a href="https://github.com/mozilla/rust/pull/9199">have been
added</a>. They are correct in cases
of overflow, and are generic.</li>
<li>A handy <code>sleep</code> function <a href="https://github.com/mozilla/rust/pull/9191">has been
added</a> to newrt.</li>
<li>File IO in newrt <a href="https://github.com/mozilla/rust/pull/9165">works on
windows</a> now.</li>
<li>A bug where nested items in a default method weren&rsquo;t compiled <a href="https://github.com/mozilla/rust/pull/9162">has been
fixed</a>.</li>
<li>A rendezvous concurrency structure, much like Ada&rsquo;s, <a href="https://github.com/mozilla/rust/pull/8908">has been
added</a>.</li>
<li>Buffered IO wrappers <a href="https://github.com/mozilla/rust/pull/9091">have been
added</a>.</li>
<li>nmatsakis landed a PR that <a href="https://github.com/mozilla/rust/pull/9088">closed 7 issues at
once</a>.</li>
<li>rustpkg now uses <code>extra::workcache</code> <a href="https://github.com/mozilla/rust/pull/9034">to prevent recompilation of
already-compiled crates</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-10">Tuesday
meeting</a>
discussed the github commit policy, implicit copyability, patterns, and the
fate of <code>&amp;const</code>.</p>

<h1>Other things</h1>

<ul>
<li>Eric Reed (ecr)&rsquo;s intern presentation: <a href="https://air.mozilla.org/intern-presentations-reed/">An I/O System for
Rust</a>. Unfortunately,
the audio cuts out.</li>
<li><a href="https://github.com/singingboyo/evict">Evict-BT</a>, a git-integrated issue
tracker.</li>
<li><a href="https://github.com/mozilla/rust/wiki/Computer-Graphics-and-Game-Development">Computer Graphics and Game
Development</a>.
Also note the <code>#rust-gamedev</code> channel.</li>
<li><a href="https://github.com/FlaPer87/rust-for-real">rust-for-real</a>, a collection of
Rust examples to aid in learning. Needs more examples!</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/07/this-week-in-rust/"/>
    <updated>2013-09-07T18:30:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/07/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another <em>This Week in Rust</em>.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>65 pull requests were merged this week, and bors has had some idle time when
there wasn&rsquo;t anything approved in the queue.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>std::os::glob</code> has been replaced with a <a href="https://github.com/mozilla/rust/pull/8914">pure Rust
version</a>, for cross-platform and
compatability reasons.</li>
<li><code>std::str::from_bytes</code> has been
<a href="https://github.com/mozilla/rust/pull/8997">renamed</a> to
<code>std::str::from_utf8</code>, to be explicit about what it accepts.</li>
<li>Casting to bool with <code>as</code> is <a href="https://github.com/mozilla/rust/pull/8980">no longer
allowed</a>, and surrogate
characters are no longer allowed in strings.</li>
<li>char is <a href="https://github.com/mozilla/rust/pull/8974">no longer</a> treated as an
integer type (meaning it can&rsquo;t be casted to/from them), which removes the
ability for safe code to create invalid characters.</li>
<li>Opening a listening socket and actually listening on it <a href="https://github.com/mozilla/rust/pull/8954">have been
split</a>. If you&rsquo;re jiggy with the
jive, listen and accept are now separate operations. (<em>ed</em>: this used to say
bind and accept wereseparate; thanks to ecr for the correction.)</li>
</ul>


<h2>Additions</h2>

<ul>
<li><code>let</code> var hygiene has <a href="https://github.com/mozilla/rust/pull/9026">landed</a>.
I&rsquo;m sure this has cool implications, but I don&rsquo;t really know what they are.</li>
<li>An <a href="https://github.com/mozilla/rust/pull/8903"><code>export_name</code> attribute</a> has
been added to control what symbol name something is exported as (similar to
<code>no_mangle</code>).</li>
<li>An <code>ExactSize</code> trait <a href="https://github.com/mozilla/rust/pull/8884">has been
added</a> to mark an iterator that
always accurately reports its size in the <code>size_hint</code> method.</li>
<li><code>ToStr</code> has been <a href="https://github.com/mozilla/rust/pull/8960">implemented</a>
for char and Ascii.</li>
<li>Safe accessors of <code>MutexArc</code> <a href="https://github.com/mozilla/rust/pull/8966">have been
implemented</a></li>
<li>A bytes iterator <a href="https://github.com/mozilla/rust/pull/8935">has been added</a>
for newrt readers.</li>
<li>Stream is <a href="https://github.com/mozilla/rust/pull/8984">automatically
implemented</a> for types which
implement Reader and Writer from newrt.</li>
<li>An <code>unreachable</code> macro <a href="https://github.com/mozilla/rust/pull/8992">has been
added</a> for better error reporting
than a function could do.</li>
<li>newrt <a href="https://github.com/mozilla/rust/pull/9000">can now do</a> simple DNS
resolution.</li>
<li>strptime/strftime <a href="https://github.com/mozilla/rust/pull/9016">now support</a>
fractional seconds, out to tenths of a nanosecond.</li>
</ul>


<h2>Changes etc</h2>

<ul>
<li>Name mangling <a href="https://github.com/mozilla/rust/pull/8875">has been
improved</a>.</li>
<li><code>rust_log.cpp</code> <a href="https://github.com/mozilla/rust/pull/8880">has been
converted</a> into pure Rust.</li>
<li>Debuginfo <a href="https://github.com/mozilla/rust/pull/8855">now does closure
capture</a> and very large structs.</li>
<li>A <a href="https://github.com/mozilla/rust/pull/8947">bunch</a>
<a href="https://github.com/mozilla/rust/pull/8927">of</a>
<a href="https://github.com/mozilla/rust/pull/8928">repr</a> improvements landed.</li>
</ul>


<h1>Meeting</h1>

<p>There was no meteting this week listed on the wiki or that I saw.</p>

<h1>Projects</h1>

<ul>
<li><a href="https://github.com/glycerine/rust-nanomsg">rust-nanomsg</a> &ndash; bindings to the
nanomsg library.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/31/this-week-in-rust/"/>
    <updated>2013-08-31T19:10:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/31/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the lucky 13th issue of <em>This Week in Rust</em>. Graydon has
stepped down as project lead. It seems to be a bit ambiguous whether he&rsquo;ll
still be working on the project. Brian (brson) will be taking over as lead.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<h2>Breaking Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8857">Some functions have been removed from
<code>std::str</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8823">The unit test framework now uses RUST_TEST_TASKS instead of
RUST_THREADS</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8718"><code>typeof</code> is now a reserved
keyword</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8807"><code>offset_inbounds</code> has been
removed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8797">Some edge cases with writing to a borrowed <code>&amp;mut</code> have been
closed</a>, rejecting more incorrect
programs.</li>
<li><a href="https://github.com/mozilla/rust/pull/8772">Option no longer implements
Add</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8700">Some pass handling stuff has
changed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8744">Enum descriminants are now always
u64</a>.</li>
</ul>


<h2>Other Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8750">String byte conversion functions which return an Option have been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8764">The main tutorial links to the condition and error handling
tutorials</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8438">A trait for default initialization has been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8757">debuginfo tests have been enabled on Windows, and debuginfo generation
works on Windows!</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8777">A better, more complete module tutorial has been
written</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8771">Some fixes to repr (the code that powers <code>%?</code> in fmt) have been
made</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8697"><code>rustpkg build</code> with no arguments now behaves a bit
differently</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8645"><code>std::run</code> has been reimplemented on top of
libuv</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8838">Frame pointer elimination has been
re-disabled</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8840">LLVM has been updated, giving us mingw-w64
support</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8819">Unit tests have been enabled on
Windows</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8802">Some compile speedups landed</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-27">Tuesday
meeting</a>
discussed rustpkg&rsquo;s timeline, extern fns, and LLVM asserts.</p>

<h1>Projects, discussion, and announcements</h1>

<ul>
<li>Jeaye says that anyone having problems with the q3 repo should re-clone. If
that doesn&rsquo;t fix it, pop into IRC: #q3 on irc.freenode.net.</li>
<li><a href="http://tim.dreamwidth.org/1820526.html">&ldquo;Making rustpkg work&rdquo;</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1lai9u/nphysics_a_2d_and_3d_rigid_body_physics_engine/">&ldquo;nphysics: a 2d and 3d rigid body physics engine for
Rust&rdquo;</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1l8hd4/first_university_computer_science_class_taught/">&ldquo;First university computer science class taught in
Rust&rdquo;</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
