<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: this-week-in-rust | Ramblin's]]></title>
  <link href="http://cmr.github.io/blog/categories/this-week-in-rust/atom.xml" rel="self"/>
  <link href="http://cmr.github.io/"/>
  <updated>2013-08-31T20:47:13-04:00</updated>
  <id>http://cmr.github.io/</id>
  <author>
    <name><![CDATA[Corey Richardson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/31/this-week-in-rust/"/>
    <updated>2013-08-31T19:10:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/31/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the lucky 13th issue of <em>This Week in Rust</em>. Graydon has
stepped down as project lead. It seems to be a bit ambiguous whether he&rsquo;ll
still be working on the project. Brian (brson) will be taking over as lead.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<h2>Breaking Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8857">Some functions have been removed from
<code>std::str</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8823">The unit test framework now uses RUST_TEST_TASKS instead of
RUST_THREADS</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8718"><code>typeof</code> is now a reserved
keyword</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8807"><code>offset_inbounds</code> has been
removed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8797">Some edge cases with writing to a borrowed <code>&amp;mut</code> have been
closed</a>, rejecting more incorrect
programs.</li>
<li><a href="https://github.com/mozilla/rust/pull/8772">Option no longer implements
Add</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8700">Some pass handling stuff has
changed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8744">Enum descriminants are now always
u64</a>.</li>
</ul>


<h2>Other Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8750">String byte conversion functions which return an Option have been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8764">The main tutorial links to the condition and error handling
tutorials</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8438">A trait for default initialization has been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8757">debuginfo tests have been enabled on Windows, and debuginfo generation
works on Windows!</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8777">A better, more complete module tutorial has been
written</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8771">Some fixes to repr (the code that powers <code>%?</code> in fmt) have been
made</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8697"><code>rustpkg build</code> with no arguments now behaves a bit
differently</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8645"><code>std::run</code> has been reimplemented on top of
libuv</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8838">Frame pointer elimination has been
re-disabled</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8840">LLVM has been updated, giving us mingw-w64
support</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8819">Unit tests have been enabled on
Windows</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8802">Some compile speedups landed</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-27">Tuesday
meeting</a>
discussed rustpkg&rsquo;s timeline, extern fns, and LLVM asserts.</p>

<h1>Projects, discussion, and announcements</h1>

<ul>
<li>Jeaye says that anyone having problems with the q3 repo should re-clone. If
that doesn&rsquo;t fix it, pop into IRC: #q3 on irc.freenode.net.</li>
<li><a href="http://tim.dreamwidth.org/1820526.html">&ldquo;Making rustpkg work&rdquo;</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1lai9u/nphysics_a_2d_and_3d_rigid_body_physics_engine/">&ldquo;nphysics: a 2d and 3d rigid body physics engine for
Rust&rdquo;</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1l8hd4/first_university_computer_science_class_taught/">&ldquo;First university computer science class taught in
Rust&rdquo;</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/25/this-week-in-rust/"/>
    <updated>2013-08-25T12:54:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/25/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the 12th issue of <em>This Week in Rust</em>. Sorry for the
brevity, though most weeks are probably going to be like this, as I&rsquo;ve started
uni and have much less free time than in the summer.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>A whopping 71 pull requests were merged this week, and issue churn remains
negative at -32.</p>

<h2>Breaking changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8560"><strong><code>yield</code> is now reserved as a
keyword</strong></a>, with the hope of
maybe using it for generators.</li>
<li><a href="https://github.com/mozilla/rust/pull/8666">The type of <code>extern fn foo</code> is now <code>extern "C" fn</code>, rather than
<code>*u8</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8679">Some free functions in <code>extra::json</code> were turned into associated functions
on the Json enum</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8558"><code>XorShiftRng::new()</code> now uses a random
seed</a>. This is only breaking if
you were depending on that constant seed, which you shouldn&rsquo;t have.</li>
</ul>


<h2>Library changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8710"><code>extra::getopts</code> aligns based on codepoint count and not byte
count</a>, as a step towards more
correct unicode handling.</li>
<li><a href="https://github.com/mozilla/rust/pull/8637"><code>fprintf</code> has been added, as well as some <code>ifmt</code>
cleanup</a>.
<a href="https://github.com/mozilla/rust/pull/8740">The new runtime has seen a lot of
optimization</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8655">File IO has been added to the new
runtime</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8616">Some parsing errors related to ports have been fixed in
<code>extra::url</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8590">CharIterator has seen some optimization too, with reverse iterators being
much closer in performance to forward iterators
now</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8602">sysconf names have been added for
android</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8631">The new runtime now has threadsafe
IO</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8566">A callback optimization has sped up message passing benchmarks to the tune
of 40%</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8584">jemalloc is back</a>.</li>
</ul>


<h2>Compiler changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8736">gnueabihf actually uses hard floats
now</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8695">Frame pointer elimination is no longer
disabled</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8684">Some debuginfo fixes landed</a>.
Supposedly, libstd can now be compiled with <code>-Z debug-info</code>. Yay!</li>
<li><a href="https://github.com/mozilla/rust/pull/8596">Stack unwinding on 32-bit windows now
works</a>. This is a major step
forward for Windows support, I&rsquo;m very excited to see it land.</li>
<li><a href="https://github.com/mozilla/rust/pull/8659">A handful of default method bugs have been
fixed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8562">Inheriting from kinds now sorta
works</a>, you can do <code>trait Foo:
Freeze</code>, for example.</li>
<li><a href="https://github.com/mozilla/rust/pull/8519">Supertrait methods can now be used from a trait
object</a>.</li>
<li>The rest of pnkfelix&rsquo;s visitor trait rewrite series landed.
<a href="https://github.com/mozilla/rust/pull/8539">2</a>,
<a href="https://github.com/mozilla/rust/pull/8619">3</a>,
<a href="https://github.com/mozilla/rust/pull/8623">4</a>, and
<a href="https://github.com/mozilla/rust/pull/8638">5</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8535">Foreign function wrappers have been
removed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8328">LLVM has been updated</a>.</li>
</ul>


<h2>Docs etc</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8563">A new condition tutorial has been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8725">Some docs for trait bounds have been
added</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-20">Tuesday
meeting</a>
discussed cycle time and how to fix it.</p>

<h1>Projects and discussion</h1>

<ul>
<li><a href="https://github.com/bjz/gl-rs">gl-rs</a> is now ready for use, since the
foreign function wrappers have been removed!</li>
<li><p><a href="https://github.com/omasanori/msgpack-rust">msgpack-rust</a> has been created.
It ties into <code>extra::serialize</code>.</p></li>
<li><p><a href="https://github.com/jensnockert/dueboot">A template for Arduino Due
projects</a>.</p></li>
<li><a href="http://www.reddit.com/r/rust/comments/1kxz7y/benchmarks_round_two_parallel_go_rust_d_scala_and/">Parallel cross-language level generation
benchmarks</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1ktjrw/a_week_with_mozillas_rust/">A Week with
Rust</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/19/this-week-in-rust/"/>
    <updated>2013-08-19T00:33:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/19/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the 11th edition of <code>This Week in Rust</code>! I&rsquo;m starting uni
this week, so if you notice I&rsquo;m not quite as omnipresent and omniprescient as
usual, that&rsquo;d be why. <strong>Please</strong> <a href="mailto:corey@octayn.net">send me an email</a>
if you would like your pull request, project, or blog post mentioned. I would
hate to overlook something cool or important.</p>

<!-- more -->


<p>The Mozilla Intern talks happened this past week or so. The ones I know about
relating to Rust are:</p>

<ul>
<li><a href="https://air.mozilla.org/intern-presentation-sullivan/">Default Methods in Rust
(sully)</a></li>
<li><a href="https://air.mozilla.org/ben-blum-from-the-research-team-presents-types-of-types-in-rust/">Types of Types in Rust
(bblum)</a></li>
<li><a href="https://air.mozilla.org/2013-intern-todd/">A Work-stealing Runtime for Rust
(toddaaro)</a></li>
<li><a href="https://air.mozilla.org/eston-schweickart-from-the-research-team-presents-a-forest-of-quadtrees-the-graphics-of-servo/">A Forest of Quadtrees: The Graphics of
Servo</a></li>
<li><a href="https://air.mozilla.org/2013-intern-presentations-august-13/">Layout in Servo: Parallel and Rustic Tree Traversals
(eatkinson)</a></li>
<li><a href="https://air.mozilla.org/2013-intern-kuehn/">Architecting Servo: Pipelines and Parallelism
(tikue)</a></li>
</ul>


<p>Congratulations to them all. The interns did a ton of great work over the
summer.</p>

<h1>What&rsquo;s cooking on master?</h1>

<p>There were only 46 PRs merged this week. I don&rsquo;t quite know why that number is
so low this week. It certainly wasn&rsquo;t for lack of PRs: the queue has been
constantly backlogged. Issue churn was -26, yay!</p>

<h2>Breaking Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8526">Some functions in Result and Either were replaced to work with external
iterators</a></li>
<li><a href="https://github.com/mozilla/rust/pull/8423">The <code>priv</code> and <code>pub</code> visibility modifiers are now forbidden on contexts
where they have no meaning</a>. For
example, marking a struct field <code>pub</code>, or a module <code>priv</code>. The compiler
errors for this are quite informative, and the conversion is purely
mechanical.</li>
<li><a href="https://github.com/mozilla/rust/pull/8532"><code>to_c_str</code> now raises a condition if the string contains interior <code>NUL</code>s,
as it is impossible to create a valid C string with interior
<code>NUL</code>s</a>.</li>
</ul>


<h2>Library improvments, bugfixes, and cleanup</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8446"><code>ifmt!</code>, the new formatter, has been
finished</a>. Yay!</li>
<li><a href="https://github.com/mozilla/rust/pull/8453"><code>extra::stats::write_boxplot</code> now works with negative or zero sample
values</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8452">Some missing pieces in libstd have been filled
in</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8491">A <code>sample</code> method has been added to <code>RngUtil</code>, for resevior
sampling</a>.</li>
</ul>


<h2>Compiler improvements, bugfixes, and cleanup</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8527">A ton of work was done on a new
visitor</a>. This is the first of a
series of five.</li>
<li><a href="https://github.com/mozilla/rust/pull/8483">Vector repeat exprs (<code>[0, ..16]</code>) are now allowed in
statics</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8477">A hint has been added for incorrect use of static
methods</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8497">Trait object coercion to <code>&amp;Trait</code> has been fixed to handle freezing and
reborrowing more correctly</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8329">Debuginfo of lexical scopes and variable shadowing has been massively
improved</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8410">A <code>--target-cpu</code> flag has been added to select the target CPU, rather than
always using &ldquo;generic&rdquo;</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8455">Support for owned and borrowed trait objects has been made better
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8421">An <code>address_insignificant</code> attribute has been
added</a>. LLVM will do merging of
statics marked with that attribute.</li>
<li><a href="https://github.com/mozilla/rust/pull/8408">Intrinsics for checked overflow on add, sub, and mul have been
added</a>.</li>
</ul>


<h2>Tools, documentation, etc</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8469">The tutorial was translated into
Japanese</a>. I think this is the
first translation of anything, so it&rsquo;s a pretty big milestone I think.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-13">Tuesday
meeting</a>
discussed turning jemalloc back on, default arguments, and method invocation
ordering. It also discussed the new IO code and stage0 stdtest.</p>

<h1>Notable discourse</h1>

<ul>
<li><a href="http://bluishcoder.co.nz/2013/08/15/phantom_types_in_rust.html">Phantom Types in
Rust</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1k6hua/rustdev_rfc_runtimeless_libstd/">RFC: Runtimeless
libstd</a></li>
</ul>


<h1>External projects</h1>

<ul>
<li><a href="https://github.com/erickt/rust-elasticsearch">Bindings to elasticsearch</a></li>
<li><a href="https://github.com/erickt/rust-zmq">zeromq bindings have been updated</a></li>
<li><a href="https://github.com/huonw/spellck">A spellchecker for Rust code, written in Rust</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1kd8ah/rustencoding_character_encoding_support_for_rust/">rust-encoding: character encoding support for
Rust</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1kctjn/my_first_rust_program_vocabulary_trainer/">A simple vocabulary
trainer</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1k7mfn/rustdev_rustdoc_ng_95_done/"><code>rustdoc_ng</code>: 95%
done</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1k5kqx/some_pages_in_servo_as_of_20130810/">Some pages as rendered by
Servo</a></li>
<li><a href="https://github.com/jfager/d3cap">d3cap: a libpcap-based network activity
visualizer</a></li>
<li><a href="https://github.com/sfackler/rust-postgres">postgres bindings</a></li>
<li><a href="https://gist.github.com/luqmana/6264106">RemoteJoy: a program for remotely viewing the screen of your PlayStation
Portable</a>.
(<a href="http://i.imgur.com/9Kda25J.jpg">screnshot</a>)</li>
<li><a href="https://github.com/bjz/gl-rs">The new OpenGL loader is working, pending the function pointer
fix</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/10/this-week-in-rust/"/>
    <updated>2013-08-10T21:39:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/10/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the tenth issue of <em>This Week in Rust</em>. This week marks
the enabling of the new runtime written entirely in Rust. A lot happens every
week, so I&rsquo;m going to start omitting PRs that I deem of lesser importance.
This process is entirely arbitrary, don&rsquo;t feel hurt if I exclude your PR :).</p>

<!-- more -->


<h1>What&rsquo;s cooking on <code>master</code>?</h1>

<p>Issue churn was -12 this week. A total of 70 PRs were merged.</p>

<p><a href="https://github.com/mozilla/rust/pull/8358">The new runtime has been enabled by
default</a>. This is the culmination
of a lot of work by brson and the rt interns (toddaaro, bblum, and ecr being
the ones I know of). It&rsquo;s written entirely in Rust, and lives in <code>std::rt</code>.
Additionally, the <a href="https://github.com/mozilla/rust/pull/8387">old C++ runtime has been
removed</a>.</p>

<h2>Breaking Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8296"><strong>Trailing nulls have been removed from all string
types.</strong></a>. This will break your
FFI code in subtle and mysterious ways, if you didn&rsquo;t explicitly use the
<code>as_c_str</code> methods. FFI code using the new <code>str::c_str</code> code will be more
robust, as it forbids interior nulls, and ensures that a trailing null
always exists. The replacement for <code>str.as_c_str</code> is
<code>str.to_c_str().as_slice()</code>, from what I can tell.</li>
<li><a href="https://github.com/cmr/rust/commit/e99eff172a11816f335153147dd0800fc4877bee">The <code>priv</code> keyword is no longer allowed where it has no
meaning</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8265"><code>iter</code> and <code>iter_err</code> in Result have been replaced with external
iterators</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8288">The <code>get</code> method of <code>Option</code>, <code>Either</code>, and <code>Result</code> has been removed in
favor of <code>unwrap</code></a>. They both did
the same thing, which was useless duplication.</li>
<li><a href="https://github.com/mozilla/rust/pull/8218"><code>std::gc</code> and <code>std::stackwalk</code></a>
have been removed, as they are obsolete with the new runtime.</li>
<li><a href="https://github.com/mozilla/rust/pull/8264">The transitionary <code>foreach</code> has been
removed</a>.</li>
</ul>


<h2>Notable library additions, bugfixes, and cleanup</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8357">Some redundant <code>Ord</code> methods were removed from
impls</a> where the default methods
sufficed.</li>
<li><a href="https://github.com/mozilla/rust/pull/8336">FromStr for IpAddr and
SocketAddr</a> is implemented.</li>
<li><a href="https://github.com/mozilla/rust/pull/8356">Work steealing is implemented for the newrt
scheduler</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8320">A frequency counting function has been added to
<code>extra::stat</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8323">Saturating math</a> is now
implemented. I knew this as &ldquo;clamping&rdquo;: it is arithmetic that clamps results
into a specific interval.</li>
<li><a href="https://github.com/mozilla/rust/pull/8287">A hexadecimal encoding module</a>
has been added to <code>extra</code>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8054"><code>EnumSet</code> has been moved into <code>extra</code>, it previously existed as a utility
in <code>rustc</code></a></li>
<li><a href="https://github.com/mozilla/rust/pull/8237"><code>str::is_utf8</code> has seen some more
optimization</a>.</li>
</ul>


<h2>Notable compiler additions, bugfixes, and cleanup</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8245">Initial support for the new formatting
code</a> has been added.</li>
<li><a href="https://github.com/mozilla/rust/pull/8279">A <code>no_main</code> attribute has been
added</a>, to omit the Rust entry
point entirely.</li>
<li><a href="https://github.com/mozilla/rust/pull/8220">Vanilla Linux on ARM</a> is now
supported.</li>
<li><a href="https://github.com/mozilla/rust/pull/8262">Extra copies of rvalues </a> are no
longer omitted.</li>
<li><a href="https://github.com/mozilla/rust/pull/8361">Some cross-arch bugs with node hash
metadata</a> have been fixed.</li>
<li><a href="https://github.com/mozilla/rust/pull/8350">A soundness bug in struct matching has been
fixed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8362">An <code>option_env!</code> syntax extension has been
added</a> for compile-time inclusion
of environment variables that may or may not be present.</li>
<li><a href="https://github.com/mozilla/rust/pull/8176"><code>extern mod a = "b/c/d"</code> has been
implemented</a>, paving the way for
more rustpkg awesomeness.</li>
</ul>


<h1>Meetings</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-06">Tuesday
meeting</a> seems
to have been a bit under-attended. SIMD, ARM, trailing nulls, order of <code>mod</code>
and <code>use</code>, and the condition system were all briefly discussed..</p>

<h1>Discussion + Blog posts</h1>

<ul>
<li><a href="https://air.mozilla.org/2013-intern-todd/">&ldquo;A Work-stealing Runtime for
Rust&rdquo;</a>, toddaaro&rsquo;s intern
presentation.</li>
<li><a href="http://michaelwoerister.github.io/2013/08/10/iterator-blocks-features.html">&ldquo;Iterator Blocks for Rust &ndash; Feature
Survey&rdquo;</a></li>
</ul>


<h1>External projects</h1>

<ul>
<li><a href="http://www.reddit.com/r/rust/comments/1k43px/a_simple_jit_vm_written_using_rust_and_libjit/">Galvanized: a simple JIT VM written in Rust, using
LibJIT</a></li>
<li><a href="https://github.com/Jeaye/q3/commit/f4c82ce9c276327cababdb6650038e2c1d62f2d5">Q3 has a new
logger</a>.
I think it&rsquo;s nicer than the built-in one!</li>
<li><a href="https://github.com/stepancheg/rust-protobuf">rust-protobuf: a protobuf implementation generating rust code, written in
rust</a>.</li>
<li><a href="https://twitter.com/metajack/status/364571230331875331/photo/1">Servo: almost passing acid1
!</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/04/this-week-in-rust/"/>
    <updated>2013-08-04T18:40:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/04/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the ninth issue of <em>This Week in Rust</em>. This week brings
the new <code>for</code> loop, which is very exciting, as well as a bunch of runtime
changes and cleanup.</p>

<!-- more -->


<h1>What&rsquo;s cooking on <code>master</code>?</h1>

<p>Issue churn was +4 this week. A total of 63 PRs were merged (again).</p>

<h2>Breaking Changes</h2>

<ul>
<li><strong>The <code>for</code> loop now uses external iterators.</strong> This means any code written
to use the old internal iterator protocol will no longer work. See the
<a href="http://static.rust-lang.org/doc/tutorial-container.html">iterator tutorial</a>
for more information on how to use it. Related pull requests:
<a href="https://github.com/mozilla/rust/pull/8141">#8141</a>,
<a href="https://github.com/mozilla/rust/pull/8184">#8184</a>,
<a href="https://github.com/mozilla/rust/pull/8190">#8190</a>,
<a href="https://github.com/mozilla/rust/pull/8244">#8244</a>. A few uses now
require <code>do</code> rather than <code>for</code> because they cannot/have not been
implemented in terms of external iterators.</li>
<li><code>unsafe</code> is <a href="https://github.com/mozilla/rust/pull/8235">no longer allowed</a>
for functions in <code>extern</code> blocks: they are all unsafe.</li>
<li>The <a href="https://github.com/mozilla/rust/pull/8175"><code>extra::dbg</code> module</a> has
been removed.</li>
<li><code>uint::range</code> and all its friends have been replaced with an <a href="https://github.com/mozilla/rust/pull/8216">external
iterator</a>, that is in the
prelude. Code like the following now works:
<code>
for x in range(0, 10) {
    println(x.to_str());
}
</code></li>
<li>The pipes compiler (the thing driving <code>proto!</code>) <a href="https://github.com/mozilla/rust/pull/8170">has been
removed</a>, as it saw limited
use, was very old, and was a significant maintenance burden.</li>
<li><code>PortSet</code> <a href="https://github.com/mozilla/rust/pull/8164">has been removed</a> from
std, as the new scheduler does not support it.</li>
<li>A bunch of old task APIs <a href="https://github.com/mozilla/rust/pull/8139">have been
removed</a>, aslo in preparation for
the new schduler.</li>
<li><code>is_utf8</code> now <a href="https://github.com/mozilla/rust/pull/8133">rejects overlong
encodings</a>.</li>
<li>The iterator adaptors <a href="https://github.com/mozilla/rust/pull/8090">no longer have the Iterator
suffix</a>, same with <a href="https://github.com/mozilla/rust/pull/8095">str and vec
iterators</a> as well.</li>
</ul>


<h2>newrt changes</h2>

<p>A bunch of newrt things landed this week, so it gets its own section.</p>

<ul>
<li>Some <a href="https://github.com/mozilla/rust/pull/8234">bugs preventing the arc and sync tests from
passing</a> have been fixed.</li>
<li>The new scheduler now supports <a href="https://github.com/mozilla/rust/pull/8221">the <code>SingleThreaded</code> spawn
mode</a>.</li>
<li>A bunch of work with task killing <a href="https://github.com/mozilla/rust/pull/8195">has
landed</a>.</li>
<li>Some <a href="https://github.com/mozilla/rust/pull/8116">major TLS changes</a> also
landed.</li>
<li>Tasks can <a href="https://github.com/mozilla/rust/pull/8158">now be named</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8008"><code>select</code> on newrt pipes</a> has
been implemented.</li>
</ul>


<h2>Notable library additions, bugfixes, and cleanup</h2>

<ul>
<li><code>Map::contains_key</code> is <a href="https://github.com/mozilla/rust/pull/8246">now a default
method</a> implemented in terms of
<code>Map::find</code></li>
<li>A <code>dynamic_lib</code> segfault <a href="https://github.com/mozilla/rust/pull/8219">has been
fixed</a>.</li>
<li>A keyed <code>HashMap</code> constructor is <a href="https://github.com/mozilla/rust/pull/8186">now
exposed</a> for runtimeless programs
that want to use it.</li>
<li>The <code>Str</code> trait now has an <a href="https://github.com/mozilla/rust/pull/8204"><code>into_owned</code>
method</a> to avoid copies when you
already have a <code>~str</code>.</li>
<li>A bunch of <a href="https://github.com/mozilla/rust/pull/8174">SHA1 and SHA2
cleanup/optimizations</a> landed. I
hear that the speed is almost optimal, only a few cycles/byte short of
Intel&rsquo;s optimized implementation.</li>
<li>Errno coverage has been <a href="https://github.com/mozilla/rust/pull/8193">significantly expanded for
Linux</a>. I added all of the ones
that were missing, at least the ones that were present on my system.</li>
<li><code>assert!()</code> without a message <a href="https://github.com/mozilla/rust/pull/8150">now does less
allocation</a>.</li>
<li>&lsquo;\&rsquo; is <a href="https://github.com/mozilla/rust/pull/8138">no longer treated as a path
separater</a> on POSIX system.</li>
<li><code>getopt</code>&rsquo;s <code>opts_str</code> <a href="https://github.com/mozilla/rust/pull/8135">has been corrected to use more than just the first
element of the vector</a>.</li>
<li>Some more methods <a href="https://github.com/mozilla/rust/pull/8115">were added</a> in
<code>std::num</code>.</li>
<li>An iterator over the offsets of each character in a string <a href="https://github.com/mozilla/rust/pull/8082">was
added</a>.</li>
<li>A bunch of <code>RandomAccessIterator</code> implementations <a href="https://github.com/mozilla/rust/pull/8120">have been
added</a>.</li>
<li><code>Clone</code> and <code>DeepClone</code> are <a href="https://github.com/mozilla/rust/pull/8109">now
implemented</a> for <code>extern "Rust"
fn</code>.</li>
</ul>


<h2>Notable compiler additions, bugfixes, and cleanup</h2>

<ul>
<li>A <code>cfg!</code> syntax extension <a href="https://github.com/mozilla/rust/pull/8188">has been
added</a> for conditionally running
code based on crate configuration, similar to what <code>#[cfg]</code> does for
conditional compilation. It expands into a true/false constant, so LLVM
should optimize out the dead branches.</li>
<li>Some more codegen tests <a href="https://github.com/mozilla/rust/pull/8165">have been
added</a>.</li>
<li><code>copy</code> <a href="https://github.com/mozilla/rust/pull/8162">has been removed as a
keyword</a>.</li>
<li>Static struct initializers <a href="https://github.com/mozilla/rust/pull/8091">can now contain
<code>..base</code></a> for functional update.</li>
<li>Take glue <a href="https://github.com/mozilla/rust/pull/8146">has been unified</a> for
unique pointer type.</li>
<li>Pointer arithmetic is <a href="https://github.com/mozilla/rust/pull/8121">now implemented with
GEP</a> rather than casting to int
and back to the pointer.</li>
<li>Some more AST types <a href="https://github.com/mozilla/rust/pull/8107">were
renamed</a>.</li>
<li>Cross-crate conditions <a href="https://github.com/mozilla/rust/pull/8185">now
work</a>.</li>
</ul>


<h2>Documentation, tools, and other stuff</h2>

<ul>
<li>LLVM assertions <a href="https://github.com/mozilla/rust/pull/8147">can now be
disabled</a> with a configure
option.</li>
<li>Benchmarking can <a href="https://github.com/mozilla/rust/pull/8111">now be
disabled</a> by passing <code>NO_BENCH=1</code>
to make.</li>
<li><code>NO_REBUILD</code> <a href="https://github.com/mozilla/rust/pull/8110">no longer requires a
re-boostrap</a>, which should make
debug cycles on libstd much shorter.</li>
<li><code>vec</code> <a href="https://github.com/mozilla/rust/pull/7223">now has module
documentation</a>.</li>
<li>rustpkg <a href="https://github.com/mozilla/rust/pull/8032">now handles tags</a>, and
not just version numbers, in the package ID.</li>
</ul>


<h1>Meetings</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-07-30">Tuesday
meeting</a> this
week was quite meaty. I&rsquo;m not going to try to summarize it, as it seems no
real decisions were made.</p>

<h1>Discussion + Blog posts</h1>

<ul>
<li><a href="http://michaelwoerister.github.io/2013/08/03/visibility-scopes.html">Visibility scopes in Rust Debug
Info</a>.</li>
<li><a href="https://air.mozilla.org/2013-intern-kuehn/">Architecting Servo: Pipelines and
Parallelism</a>, a talk by Tim
Kuehn.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1jo431/runtimeless_sprocketnes/">Runtimeless
sprocketnes</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1joy7f/porting_machine_learning_algorithms_to_rust/">Porting machine learning algorithms to
Rust</a>.</li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-July/005039.html">RFC: Overloadable dereference
operator</a>.</li>
</ul>


<h1>External projects</h1>

<ul>
<li><a href="https://github.com/SiegeLord/RustGnuplot">RustGnuplot</a> was updated to
latest Rust.</li>
<li>A <a href="https://github.com/stepancheg/rust-protobuf">protobuf implementation</a> has
been started.</li>
<li><a href="https://github.com/linuxfood/rustsqlite">rustsqlite</a> has
been updated to latest Rust.</li>
<li>A <a href="https://github.com/veddan/rust-htmlescape">library for HTML escaping</a> has
been created.</li>
<li>A <a href="https://github.com/bjz/noise-rs">library for procedurally generating
noise</a> has been created.</li>
<li>A <a href="https://github.com/MarkJr94/rust-keccak">pure-Rust implementation of
Keccak</a> has been created.</li>
<li><a href="https://github.com/erickt/rust-zmq">rust-zmq</a> has been updated to latest
Rust, as well as cleaner error/constant interface.</li>
<li><a href="https://github.com/Jeaye/q3">q3</a> now does multithreaded rendering.</li>
</ul>

]]></content>
  </entry>
  
</feed>
