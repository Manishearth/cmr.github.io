<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: this-week-in-rust | Ramblin's]]></title>
  <link href="http://cmr.github.io/blog/categories/this-week-in-rust/atom.xml" rel="self"/>
  <link href="http://cmr.github.io/"/>
  <updated>2013-10-13T03:29:59-04:00</updated>
  <id>http://cmr.github.io/</id>
  <author>
    <name><![CDATA[Corey Richardson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/10/12/this-week-in-rust/"/>
    <updated>2013-10-12T22:53:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/10/12/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>. This week introduces raw
string literals, the removal of the <code>rust</code> tool, feature gating, and the
privacy overhaul.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>Only 51 PRs were merged this week, though the ones that were were fairly
large.</p>

<h2>Breaking changes</h2>

<ul>
<li>Visibility and privacy have been defined, and the new semantics are slightly
incompatible with the old. The details are
<a href="https://github.com/mozilla/rust/pull/9735">here</a>.</li>
<li>Feature gating has been <a href="https://github.com/mozilla/rust/pull/9703">added to the
compiler</a>. This allows us to
mask language features that we don&rsquo;t want to commit to for 1.0. The compiler
will tell you when you are using an &ldquo;experimental&rdquo; feature. The current
experimentals are glob imports, macro definitions, and struct-like variants
in enums. This is an important step forward for 1.0 which,
<a href="http://www.reddit.com/r/rust/comments/1o90f9/fn_types_in_rust_take_3/ccq8qev">apparently</a>,
is right around the corner.</li>
<li>The <code>rust</code> tool <a href="https://github.com/mozilla/rust/pull/9785">has been
removed</a>.</li>
<li><code>Option</code>&rsquo;s API has been <a href="https://github.com/mozilla/rust/pull/9359">massively
simplified</a>, and changed to be
composable.</li>
<li>Strings are <a href="https://github.com/mozilla/rust/pull/9750">no longer allowed to be modified in safe
code</a>. Things like <code>let s =
~"abcdefg"; s[4] = 0x99;</code> are now rejected. This is because it allows one to
create invalid (non-UTF8) string values.</li>
<li><code>extra::rc</code> has <a href="https://github.com/mozilla/rust/pull/9794">graduated to
<code>std::rc</code></a>.</li>
<li><code>extra::tempfile::mkdtemp</code> <a href="https://github.com/mozilla/rust/pull/9802">has been replaced with an RAII
wrapper</a>.</li>
<li><code>std::rand</code> <a href="https://github.com/mozilla/rust/pull/9695">has been improved</a>,
but changes the public API of Rng a bit.</li>
<li><code>IntConvertible</code> has been removed in favor of <a href="https://github.com/mozilla/rust/pull/9250"><code>ToPrimitive</code> and
<code>FromPrimitive</code></a>, which can be
derived for enums, making interacting with C APIs substantially more
<a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a>.</li>
</ul>


<h2>Other changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/9674">Raw strings</a> are now supported.
The basic syntax is <code>r"Foo"</code>, but also <code>r###"Foo"###</code>, for arbitrary
nesting of raw strings.</li>
<li>rustpkg&rsquo;s remote fetching <a href="https://github.com/mozilla/rust/pull/9741">is
fixed</a>, but <a href="https://github.com/mozilla/rust/issues/9482">other
problems</a> prevent it from being
fully usable right now.</li>
<li>debuginfo namespace handling <a href="https://github.com/mozilla/rust/pull/9658">has been
unified</a>, and marks the ability
to build all of Rust (libstd, libextra, compiler and tools) with debuginfo,
which is very awesome.</li>
<li>Small structs <a href="https://github.com/mozilla/rust/pull/9759">are immediate</a>.</li>
<li>When there are unbalanced delimiters, <a href="https://github.com/mozilla/rust/pull/9756">the opening delimiters leading up to
it</a> are printed, avoiding the
&ldquo;Expected a }, saw EOF at line 9001&rdquo; problem.</li>
<li>libuv and jemalloc are only <a href="https://github.com/mozilla/rust/pull/9772">built once, rather than once per
stage</a>.</li>
<li>Macros <a href="https://github.com/mozilla/rust/pull/9753">now take attributes</a> and,
in turn, can be documented.</li>
<li>In the opposite direction, <a href="https://github.com/mozilla/rust/pull/9783">macros can now expand to items with
attributes</a>.</li>
<li>There were some <a href="https://github.com/mozilla/rust/pull/9664">minor logging
changes</a>, the biggest result of
which is that inlined functions won&rsquo;t be logged by the modules they&rsquo;re
inlined into.</li>
<li><a href="https://github.com/mozilla/rust/pull/9749"><code>std::rt::io::native</code> has been
implemented</a>. The idea of this is
to live in <code>std::io::native</code> and to use the OS&rsquo;s native APIs rather than
libuv, and also to not require the scheduler or any other runtime support.</li>
<li>rustpkg <a href="https://github.com/mozilla/rust/pull/9732">marks checked out repos as
read-only</a>, to prevent
modifications.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-10-08">weekly
meeting</a>
discussed some administrative things, the removal of crypto code, the removal
of the <code>rust</code> tool, and functions.</p>

<h1>Announcements etc</h1>

<ul>
<li><a href="http://www.reddit.com/r/rust/comments/1o35ns/fuse_userspace_library_in_rust/">rust-fuse</a>
- a FUSE userspace library in Rust. This is pure Rust, not using libfuse.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1o46cv/ears_a_simple_library_for_playing_sounds/">ears</a>
- a simple library for playing sounds.</li>
<li><a href="https://github.com/pcmattman/rustic">rustic</a> &ndash; another operating system
project.</li>
<li><a href="https://mail.mozilla.org/pipermail/rust-dev/2013-October/005981.html">Refactoring the milestones on the issue
tracker</a>.</li>
<li><a href="http://smallcultfollowing.com/babysteps/blog/2013/10/10/fn-types-in-rust/">Fn Types in Rust, Take
3</a>
- another attempt at tackling the problems with closures.</li>
<li>mcpherrin in <code>#rust</code> says &ldquo;Hello, everyone!&rdquo;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/10/06/this-week-in-rust/"/>
    <updated>2013-10-06T18:25:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/10/06/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>Only 63 PRs were merged this week. Currently in the queue is the massive
privacy change, the path rewrite, enum descriminant shrinking, a <code>rand</code>
rework, a lock-free scheduler message queue, and libuv signal bindings.</p>

<h2>Breaking Changes</h2>

<ul>
<li><code>float</code> has been <a href="https://github.com/mozilla/rust/pull/9519">removed from the
language</a>.</li>
<li><code>loop</code> has been <a href="https://github.com/mozilla/rust/pull/9665">removed</a>. The
transition to <code>continue</code> is complete.</li>
<li>A macro ignoring tokens now <a href="https://github.com/mozilla/rust/pull/9673">throws an
error</a> rather than silently
ignoring it.</li>
<li><code>IntConvertible</code> has been
<a href="https://github.com/mozilla/rust/pull/9250">replaced</a> with <code>ToPrimitive</code> and
<code>FromPrimitive</code>. This also heralds the ability to derive to/from int methods
on enums.</li>
</ul>


<h2>Everything Else</h2>

<ul>
<li><code>rustpkg</code> can <a href="https://github.com/mozilla/rust/pull/9741">fetch remote packages
again</a>.</li>
<li>A bunch of unsafe code surrounding logging <a href="https://github.com/mozilla/rust/pull/9593">has been
remove</a>.</li>
<li>A bunch of work was done to make more things immediate. A
<a href="https://github.com/mozilla/rust/pull/9643">bugfix</a>, <a href="https://github.com/mozilla/rust/pull/9656">small
tuples</a>, <a href="https://github.com/mozilla/rust/pull/9677">small
enums</a>, and <a href="https://github.com/mozilla/rust/pull/9699">unit/C-like
enums</a>.</li>
<li>A bunch of work went into decreasing our memory usage. The massive spike at
the beginning <a href="https://github.com/mozilla/rust/pull/9612">has been fixed</a>.
The tcx (type context, holds the result of <em>all</em> compiler analysis) is also
free&rsquo;d before translation now, reducing memory usage by a good <a href="https://github.com/mozilla/rust/pull/9686">500+
MB</a>. Another cache during
constant evaluation <a href="https://github.com/mozilla/rust/pull/9722">reduces memory usage by
200MB</a>.</li>
<li>We&rsquo;re now <a href="https://github.com/mozilla/rust/pull/9662">bundling our
dependencies</a> on Windows, making
it easier to bootstrap and to setup a working Rust environment.</li>
<li>All of the really old obsolete syntax checkers <a href="https://github.com/mozilla/rust/pull/9712">have been
removed</a>.</li>
<li>Hyperlinking between crates is <a href="https://github.com/mozilla/rust/pull/9691">now
reimplemented</a> in rustdoc.</li>
<li>Gearing up for its removal, <a href="https://github.com/mozilla/rust/pull/9599">all <code>fmt!</code> usage in the compiler has been
removed</a>.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-10-01">weekly
meeting</a>
discussed a bunch of proposed changes, including rustpkg submodules, removing
float (which has already happened), raw string literals (which have a patch
almost finished), and the changes to the Option API.</p>

<h1>Announcements</h1>

<ul>
<li><a href="https://github.com/jeaye/ncurses-rs">ncurses-rs</a> &ndash; a safe wrapper that
keeps the same ncurses interface you know and &ldquo;love&rdquo;, but more rustic.</li>
<li><a href="https://github.com/mozilla/rust/wiki/The%20Rusticon">The Rusticon</a> &ndash; A
living glossary of Rust terms.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1nqzth/zeromq_helping_us_block_malicious_domains_in_real/">A production use of
Rust!</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1ntnvf/understanding_the_servo_strategy/">Understanding the Servo
Strategy</a>
- The Servo presentation given at the various Mozilla Summits</li>
<li><a href="http://www.reddit.com/r/rust/comments/1nmarr/dynamic_typing_implemented_as_library_code/">Dynamic Typing implemented as a
library</a>
- a pretty cool use of our reflection.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1ni84a/running_rust_tests_on_travis_ci/">Running Rust Tests on Travis
CI</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1ngqgr/rust_bindings_for_fuse_filesystem_in_userspace/">Rust bindings for
FUSE</a></li>
</ul>


<h1>Meetups</h1>

<p>Haven&rsquo;t had a meetup section in a long time, but two are forming!</p>

<ul>
<li><a href="http://www.meetup.com/Rust-Bay-Area/">Francisco Bay Area</a></li>
<li><a href="http://www.meetup.com/rust-skane/">Rust Skåne (Lund, Sweden)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/30/this-week-in-rust/"/>
    <updated>2013-09-30T13:11:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/30/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>! This week saw the release of
0.8, the removal of <code>@fn</code>, and a bunch of other changes. The tutorial has been
updated significantly, surrounding pointers and boxes, so you should re-read
those sections if you&rsquo;re still feeling shaky on when you should use which.</p>

<!-- more -->


<h1>What&rsquo;s cooking on master?</h1>

<p>There were 79 PRs merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>printf!</code> and <code>printfln!</code> have been
<a href="https://github.com/mozilla/rust/pull/9550">removed</a>.</li>
<li><code>continue</code> is now a keyword, a <a href="https://github.com/mozilla/rust/pull/9504">synonym for
<code>loop</code></a>, preceeding <code>loop</code>&rsquo;s
removal (<a href="https://github.com/mozilla/rust/issues/9467">https://github.com/mozilla/rust/issues/9467</a>)</li>
<li>Item visibility is <a href="https://github.com/mozilla/rust/pull/9432">properly encoded in
metadata</a>, so code which used
private items that may have worked before is now rejected.</li>
<li>Char literals which should have been escaped <a href="https://github.com/mozilla/rust/pull/9335">are now rejected when they
aren&rsquo;t escaped</a>.</li>
<li><code>impl Foo for T;</code> is now <a href="https://github.com/mozilla/rust/pull/9336">disallowed</a>.
Use <code>impl Foo for T {}</code>.</li>
<li><code>@fn</code> has been <a href="https://github.com/mozilla/rust/pull/9310">removed from the
language</a>. Replace it with
<code>@Trait</code> objects, if you really need <code>@fn</code> (you probably don&rsquo;t).</li>
<li><code>start</code> <a href="https://github.com/mozilla/rust/pull/9301">no longer takes a crate
map</a>.</li>
<li>Some more keywords have been
<a href="https://github.com/mozilla/rust/pull/9389">reserved</a>: <code>alignof</code>,
<code>offsetof</code>, and <code>sizeof</code>.</li>
</ul>


<h2>Everything else</h2>

<ul>
<li>A ton of documentation work was put in this week. The box section of the
tutorial has been <a href="https://github.com/mozilla/rust/pull/9589">rewritten</a>,
and there&rsquo;s a new <a href="https://github.com/mozilla/rust/pull/9439">rustpkg
tutorial</a> too. The module
tutorial saw the file section
<a href="https://github.com/mozilla/rust/pull/9398">extended</a>. There was a bunch of
module documentation updated/added too.</li>
<li>rustdoc(_ng) also saw a lot of work. It <a href="https://github.com/mozilla/rust/pull/9402">completely
replaced</a> the old rustdoc, as
well as seeing a <a href="https://github.com/mozilla/rust/pull/9577">lot</a> of
<a href="https://github.com/mozilla/rust/pull/9475">fixes</a>. Huge thanks to Alex
Crichton for all the work with it!</li>
<li><code>std::vec</code> has seen some <a href="https://github.com/mozilla/rust/pull/9583">nice
changes</a> to <code>connect_vec</code> and
<code>concat_vec</code> (they were really awful before).</li>
<li><code>rustpkg test</code> is <a href="https://github.com/mozilla/rust/pull/9549">implemented</a>.</li>
<li><code>type_use</code> has been <a href="https://github.com/mozilla/rust/pull/9538">removed</a>.
This did some nasty things and LLVM&rsquo;s <code>mergefunc</code> pass will do a better job
of the same optimization (once it&rsquo;s enabled).</li>
<li><code>with_c_str</code> is now <a href="https://github.com/mozilla/rust/pull/9352">optimized</a>
to be allocation-free for short vectors.</li>
<li>The logging system, when using the new formatting code (so <code>debug2</code> etc) is
<a href="https://github.com/mozilla/rust/pull/9261">allocation-free</a>.</li>
<li><code>std::rand</code> has seen some
<a href="https://github.com/mozilla/rust/pull/9362">cleanup</a>, in preparation for its
overhaul.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-24">weekly
meeting</a>
discussed a bunch of things, the main things of importance to me being:</p>

<ul>
<li><code>loop</code> &ndash;> <code>continue</code></li>
<li>Allowing nested comments</li>
</ul>


<h1>Announcements</h1>

<ul>
<li><a href="https://github.com/kenz-gelsoft/wxRust">wxRust</a> &ndash; A binding to the
wxWidgets toolkit.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1neu74/the_start_of_a_sinatra_clone/">widmann</a>
-  A Sinatra clone</li>
<li><a href="http://www.reddit.com/r/rust/comments/1nab2s/rustdev_opengl_glrs_updated_with_command_line/">gl-rs</a>
has been updated to generate only bindings for a select version / set of
extensions.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1n8y5b/debugging_rust_in_eclipse/">Debugging Rust in
Eclipse</a>
- Michael Woerister&rsquo;s final GSoC post. He did really great work this
summer!</li>
<li><a href="https://github.com/steveklabnik/rust_for_rubyists">Rust for Rubyists</a> has
been open sourced!</li>
<li>The <a href="https://code.google.com/p/claymore-game/">Claymore</a> project has just
come to my attention. Apparently it has been going on for quite some time.
There are some screenshots at <a href="http://claymore-dev.blogspot.com/">http://claymore-dev.blogspot.com/</a>.</li>
<li><a href="https://github.com/JeremyLetang/rustenstein3D/">rustenstein3d</a> &ndash; a
Wolfenstein3D engine</li>
<li><a href="https://github.com/eevee/clio">clio</a>, a roguelike. This one also slipped
under my radar for a while.</li>
<li><a href="https://github.com/thestinger/rust-gmp">rust-gmp</a> has been updated for
0.8/master.</li>
<li><a href="https://github.com/cmr/rustdoc_ng">rustdoc_ng</a>, being merged into mainline,
has concluded as a project.</li>
<li>And, of course, the <a href="http://www.reddit.com/r/rust/comments/1n7q8v/08_released/">0.8
release</a>
discussion on reddit.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/23/this-week-in-rust/"/>
    <updated>2013-09-23T13:08:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/23/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another issue of <em>This Week in Rust</em>. We&rsquo;re gearing up for a 0.8
release, tentatively planned for Thursday. Additionally, a huge welcome of
Alex Crichton to the Rust team! He&rsquo;s been doing some great work, it&rsquo;s
wonderful to have another full-time Rust dev.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>There were 86 PRs merged this week.</p>

<h2>rustdoc_ng</h2>

<p>rustdoc_ng was merged into mainline and enabled as the new rustdoc, in time
for 0.8. This makes me incredibly happy, as it marks the conclusion of my
quest to a better rustdoc. Not to say that rustdoc is finished or perfect,
but it&rsquo;s already much better than the old rustdoc. My sincere thanks go to
Jordi Boggiano (Seldaek), who worked unceasingly to create a beautiful,
usable frontend, and to Meret Vollenweider (meretv) for donating her amazing
design skills. Also thanks to Huon Wilson (dbaupp) for moral support and
creating the awesome DocFolder interface that passes over the documentation
use. And, of course, to Alex Crichton, who pushed these past few days to port
the static site generator to Rust and to integrate it into the build system.</p>

<p>The new docs have replaced the old docs. You can view them <a href="http://static.rust-lang.org/doc/master/std/index.html">on the Rust
website</a>. Still to-do
is proper cross-crate doc hyperlinking. To run it on your own crate, build a
recent Rust and do <code>rustdoc html path/to/your/crate.rs</code>. It will eventually be
integrated into <code>rustpkg</code>.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>extra::par</code> has been <a href="https://github.com/mozilla/rust/pull/9380">removed</a>.</li>
<li>Some unsound functional struct updates (FSU, <code>{a: 5, ..b}</code>) <a href="https://github.com/mozilla/rust/pull/9350">are now
disallowed</a>.</li>
<li><code>--cfg debug</code> is no longer required. If you want to disable debug logging,
use <a href="https://github.com/mozilla/rust/pull/9278"><code>--cfg ndebug</code></a>.</li>
<li>The various uses of <code>NaN</code> are now <a href="https://github.com/mozilla/rust/pull/9321">lowercased to
<code>nan</code></a>.</li>
<li><code>std::util::unreachable</code> has been removed in factor of the
<a href="https://github.com/mozilla/rust/pull/9320"><code>unreachable!</code></a> macro.</li>
<li><code>extra::future</code> has been <a href="https://github.com/mozilla/rust/pull/9285">cleaned
up</a> a bit, including some method
shuffling/renames.</li>
<li><code>extra::getopts</code> has been <a href="https://github.com/mozilla/rust/pull/9267">cleaned
up</a> as well, with most free
functions now being methods.</li>
<li>The <code>from_str</code> methods in the numeric modules have been
<a href="https://github.com/mozilla/rust/pull/9275">removed</a> in favor of the FromStr
trait and the <code>from_str</code> free function in the prelude. Same for
<a href="https://github.com/mozilla/rust/pull/9209"><code>from_str_radix</code></a>.</li>
<li>The <code>Drop</code> trait now uses <a href="https://github.com/mozilla/rust/pull/9244"><code>&amp;mut
self</code></a>, as part of the transition
to by-value drops.</li>
<li><code>extra::json</code> uses a <a href="https://github.com/mozilla/rust/pull/9231">different
encoding</a> when encoding/decoding
enums, so any Rust-generated JSON before this patch will now be rejected by
the decoder.</li>
</ul>


<h2>Other changes</h2>

<ul>
<li>debuginfo now works for <a href="https://github.com/mozilla/rust/pull/9168">recursive
types</a>.</li>
<li>You can now <a href="https://github.com/mozilla/rust/pull/9213">pass parameters</a> to
the generated test with <code>rust test</code>.</li>
<li><code>extern fn</code>s from external crates now use the <a href="https://github.com/mozilla/rust/pull/9196">declared
ABI</a>, rather than assuming cdecl.</li>
<li><code>CString</code> has gained an
<a href="https://github.com/mozilla/rust/pull/9220"><code>as_str</code></a> method.</li>
<li>Some <a href="https://github.com/mozilla/rust/pull/9108">overflow bugs</a> in <code>vec</code> and
<code>str</code> have been fixed.</li>
<li><code>statics</code> are now <a href="https://github.com/mozilla/rust/pull/9130">properly
inlined</a> cross-crate.</li>
<li>The <code>bytes!</code> macro&rsquo;s error reporting has been <a href="https://github.com/mozilla/rust/pull/9245">tightened
up</a> to make it more obvious where
the error is.</li>
<li><code>rustpkg init</code> <a href="https://github.com/mozilla/rust/pull/9236">has been added</a>,
to create a new workspace.</li>
<li>File IO in newrt has been <a href="https://github.com/mozilla/rust/pull/9235">massively
reworked</a> and is much more
complete than the oldrt.</li>
<li>The exact meaning of &ldquo;unsafety&rdquo; <a href="https://github.com/mozilla/rust/pull/9258">is now
documented</a>.</li>
<li><code>\0</code> escapes in strings <a href="https://github.com/mozilla/rust/pull/9248">is now
supported</a>.</li>
<li><code>rustpkg</code> now thinks in terms of crates, not packages, to you can now have
<a href="https://github.com/mozilla/rust/pull/9263">multiple crates in a single
package</a> and have things work
correctly.</li>
<li>newrt has <a href="https://github.com/mozilla/rust/pull/9260/files">pipes and process
support</a> now.</li>
<li><code>format!</code> now allows <a href="https://github.com/mozilla/rust/pull/9299">trailing
commas</a> in its arguments.</li>
<li>The lexer now throws <a href="https://github.com/mozilla/rust/pull/9308">vastly better
errors</a>.</li>
</ul>


<h1>Weekly Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-17">weekly
meeting</a>
discussed quite a bit, most interesting to me was the crypto discussion,
putting <code>macro_rules!</code> behind an experimental flag, and the default arguments
discussion.</p>

<h1>Project announcements etc</h1>

<ul>
<li><a href="https://github.com/williamw520/rustymem">rustymem</a> &ndash; a pure-rust memcached
library.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1myesy/where_to_learn_more_about_rusts_concurrency_model/">&ldquo;Where to learn more about Rust&rsquo;s concurrency
model?&rdquo;</a></li>
<li><a href="https://raw.github.com/jeaye/q3/master/pics/016_1_animated_skele.png">q3 now has skeletal
animation!</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/15/this-week-in-rust/"/>
    <updated>2013-09-15T17:59:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/15/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to another issue of <em>This Week in Rust</em>. We&rsquo;re gearing up
for the 0.8 release in 2-3 weeks. It looks like it&rsquo;s going to be a really
solid release. I&rsquo;ll write another <code>State of Rust</code>, hopefully before it is
released.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>68 PRs were merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>std::iterator</code> <a href="https://github.com/mozilla/rust/pull/9065">has been
renamed</a> to <code>std::iter</code>.</li>
<li>The <code>std::num::Primitive</code> trait is <a href="https://github.com/mozilla/rust/pull/9051">now
constrained</a> by the <code>Clone</code> and
<code>DeepClone</code> traits, as well as
<a href="https://github.com/mozilla/rust/pull/9182"><code>Orderable</code></a>.</li>
<li>Some <a href="https://github.com/mozilla/rust/pull/9062">more free functions</a> have
been removed from <code>std::vec</code>. <code>unzip</code> now takes an iterator, a
<code>Permutations</code> iterator has been added, and some rarely-used, obsolete,
functions were removed.</li>
<li>A bunch of changes to <code>Option</code> and <code>Result</code> <a href="https://github.com/mozilla/rust/pull/9115">were
made</a>. Specifically, <code>chain</code> was
changed to <code>and_then</code> and <code>unwrap_or_default</code> to <code>unwrap_or</code>.</li>
<li>rustpkg <a href="https://github.com/mozilla/rust/pull/9151">builds into
target-specific</a> subdirectories
now.</li>
</ul>


<h2>Additions and fixes</h2>

<ul>
<li>debuginfo now has <a href="https://github.com/mozilla/rust/pull/9097">namespace
support</a>. Looking at all the
various PRs Michael has opened over the summer, it seems DWARF is a very
flexible, nice debuginfo format, but gdb and LLVM don&rsquo;t support it very
well.</li>
<li>Correct <code>range_step</code> and <code>range_step_inclusive</code> iterators <a href="https://github.com/mozilla/rust/pull/9199">have been
added</a>. They are correct in cases
of overflow, and are generic.</li>
<li>A handy <code>sleep</code> function <a href="https://github.com/mozilla/rust/pull/9191">has been
added</a> to newrt.</li>
<li>File IO in newrt <a href="https://github.com/mozilla/rust/pull/9165">works on
windows</a> now.</li>
<li>A bug where nested items in a default method weren&rsquo;t compiled <a href="https://github.com/mozilla/rust/pull/9162">has been
fixed</a>.</li>
<li>A rendezvous concurrency structure, much like Ada&rsquo;s, <a href="https://github.com/mozilla/rust/pull/8908">has been
added</a>.</li>
<li>Buffered IO wrappers <a href="https://github.com/mozilla/rust/pull/9091">have been
added</a>.</li>
<li>nmatsakis landed a PR that <a href="https://github.com/mozilla/rust/pull/9088">closed 7 issues at
once</a>.</li>
<li>rustpkg now uses <code>extra::workcache</code> <a href="https://github.com/mozilla/rust/pull/9034">to prevent recompilation of
already-compiled crates</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-10">Tuesday
meeting</a>
discussed the github commit policy, implicit copyability, patterns, and the
fate of <code>&amp;const</code>.</p>

<h1>Other things</h1>

<ul>
<li>Eric Reed (ecr)&rsquo;s intern presentation: <a href="https://air.mozilla.org/intern-presentations-reed/">An I/O System for
Rust</a>. Unfortunately,
the audio cuts out.</li>
<li><a href="https://github.com/singingboyo/evict">Evict-BT</a>, a git-integrated issue
tracker.</li>
<li><a href="https://github.com/mozilla/rust/wiki/Computer-Graphics-and-Game-Development">Computer Graphics and Game
Development</a>.
Also note the <code>#rust-gamedev</code> channel.</li>
<li><a href="https://github.com/FlaPer87/rust-for-real">rust-for-real</a>, a collection of
Rust examples to aid in learning. Needs more examples!</li>
</ul>

]]></content>
  </entry>
  
</feed>
