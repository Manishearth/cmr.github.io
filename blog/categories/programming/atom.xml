<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Ramblin's]]></title>
  <link href="http://cmr.github.io/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://cmr.github.io/"/>
  <updated>2013-09-15T19:02:38-04:00</updated>
  <id>http://cmr.github.io/</id>
  <author>
    <name><![CDATA[Corey Richardson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/15/this-week-in-rust/"/>
    <updated>2013-09-15T17:59:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/15/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to another issue of <em>This Week in Rust</em>. We&rsquo;re gearing up
for the 0.8 release in 2-3 weeks. It looks like it&rsquo;s going to be a really
solid release. I&rsquo;ll write another <code>State of Rust</code>, hopefully before it is
released.</p>

<h1>What&rsquo;s cooking in master?</h1>

<p>68 PRs were merged this week.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>std::iterator</code> <a href="https://github.com/mozilla/rust/pull/9065">has been
renamed</a> to <code>std::iter</code>.</li>
<li>The <code>std::num::Primitive</code> trait is <a href="https://github.com/mozilla/rust/pull/9051">now
constrained</a> by the <code>Clone</code> and
<code>DeepClone</code> traits.</li>
<li>Some <a href="https://github.com/mozilla/rust/pull/9062">more free functions</a> have
been removed from <code>std::vec</code>. <code>unzip</code> now takes an iterator, a
<code>Permutations</code> iterator has been added, and some rarely-used, obsolete,
functions were removed.</li>
<li>A bunch of changes to <code>Option</code> and <code>Result</code> <a href="https://github.com/mozilla/rust/pull/9115">were
made</a>.</li>
<li>rustpkg <a href="https://github.com/mozilla/rust/pull/9151">builds into
target-specific</a> subdirectories
now.</li>
</ul>


<h2>Additions and fixes</h2>

<ul>
<li>debuginfo now has <a href="https://github.com/mozilla/rust/pull/9097">namespace
support</a>. Looking at all the
various PRs Michael has opened over the summer, it seems DWARF is a very
flexible, nice debuginfo format, but gdb and LLVM don&rsquo;t support it very
well.</li>
<li>Correct <code>range_step</code> and <code>range_step_inclusive</code> iterators <a href="https://github.com/mozilla/rust/pull/9199">have been
added</a>. They are correct in cases
of overflow, and are generic.</li>
<li>A handy <code>sleep</code> function <a href="https://github.com/mozilla/rust/pull/9191">has been
added</a> to newrt.</li>
<li>File IO in newrt <a href="https://github.com/mozilla/rust/pull/9165">works on
windows</a> now.</li>
<li>A bug where nested items in a default method weren&rsquo;t compiled <a href="https://github.com/mozilla/rust/pull/9162">has been
fixed</a>.</li>
<li>A rendezvous concurrency structure, much like Ada&rsquo;s, <a href="https://github.com/mozilla/rust/pull/8908">has been
added</a>.</li>
<li>Buffered IO wrappers <a href="https://github.com/mozilla/rust/pull/9091">have been
added</a>.</li>
<li>nmatsakis landed a PR that <a href="https://github.com/mozilla/rust/pull/9088">closed 7 issues at
once</a>.</li>
<li>rustpkg now uses <code>extra::workcache</code> <a href="https://github.com/mozilla/rust/pull/9034">to prevent recompilation of
already-compiled crates</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-09-10">Tuesday
meeting</a>
discussed the github commit policy, implicit copyability, patterns, and the
fate of <code>&amp;const</code>.</p>

<h1>Other things</h1>

<ul>
<li>Eric Reed (ecr)&rsquo;s intern presentation: <a href="https://air.mozilla.org/intern-presentations-reed/">An I/O System for
Rust</a>. Unfortunately,
the audio cuts out.</li>
<li><a href="https://github.com/singingboyo/evict">Evict-BT</a>, a git-integrated issue
tracker.</li>
<li><a href="https://github.com/mozilla/rust/wiki/Computer-Graphics-and-Game-Development">Computer Graphics and Game
Development</a>.
Also note the <code>#rust-gamedev</code> channel.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/09/07/this-week-in-rust/"/>
    <updated>2013-09-07T18:30:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/09/07/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Welcome to another <em>This Week in Rust</em>.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>65 pull requests were merged this week, and bors has had some idle time when
there wasn&rsquo;t anything approved in the queue.</p>

<h2>Breaking changes</h2>

<ul>
<li><code>std::os::glob</code> has been replaced with a <a href="https://github.com/mozilla/rust/pull/8914">pure Rust
version</a>, for cross-platform and
compatability reasons.</li>
<li><code>std::str::from_bytes</code> has been
<a href="https://github.com/mozilla/rust/pull/8997">renamed</a> to
<code>std::str::from_utf8</code>, to be explicit about what it accepts.</li>
<li>Casting to bool with <code>as</code> is <a href="https://github.com/mozilla/rust/pull/8980">no longer
allowed</a>, and surrogate
characters are no longer allowed in strings.</li>
<li>char is <a href="https://github.com/mozilla/rust/pull/8974">no longer</a> treated as an
integer type (meaning it can&rsquo;t be casted to/from them), which removes the
ability for safe code to create invalid characters.</li>
<li>Opening a listening socket and actually listening on it <a href="https://github.com/mozilla/rust/pull/8954">have been
split</a>. If you&rsquo;re jiggy with the
jive, listen and accept are now separate operations. (<em>ed</em>: this used to say
bind and accept wereseparate; thanks to ecr for the correction.)</li>
</ul>


<h2>Additions</h2>

<ul>
<li><code>let</code> var hygiene has <a href="https://github.com/mozilla/rust/pull/9026">landed</a>.
I&rsquo;m sure this has cool implications, but I don&rsquo;t really know what they are.</li>
<li>An <a href="https://github.com/mozilla/rust/pull/8903"><code>export_name</code> attribute</a> has
been added to control what symbol name something is exported as (similar to
<code>no_mangle</code>).</li>
<li>An <code>ExactSize</code> trait <a href="https://github.com/mozilla/rust/pull/8884">has been
added</a> to mark an iterator that
always accurately reports its size in the <code>size_hint</code> method.</li>
<li><code>ToStr</code> has been <a href="https://github.com/mozilla/rust/pull/8960">implemented</a>
for char and Ascii.</li>
<li>Safe accessors of <code>MutexArc</code> <a href="https://github.com/mozilla/rust/pull/8966">have been
implemented</a></li>
<li>A bytes iterator <a href="https://github.com/mozilla/rust/pull/8935">has been added</a>
for newrt readers.</li>
<li>Stream is <a href="https://github.com/mozilla/rust/pull/8984">automatically
implemented</a> for types which
implement Reader and Writer from newrt.</li>
<li>An <code>unreachable</code> macro <a href="https://github.com/mozilla/rust/pull/8992">has been
added</a> for better error reporting
than a function could do.</li>
<li>newrt <a href="https://github.com/mozilla/rust/pull/9000">can now do</a> simple DNS
resolution.</li>
<li>strptime/strftime <a href="https://github.com/mozilla/rust/pull/9016">now support</a>
fractional seconds, out to tenths of a nanosecond.</li>
</ul>


<h2>Changes etc</h2>

<ul>
<li>Name mangling <a href="https://github.com/mozilla/rust/pull/8875">has been
improved</a>.</li>
<li><code>rust_log.cpp</code> <a href="https://github.com/mozilla/rust/pull/8880">has been
converted</a> into pure Rust.</li>
<li>Debuginfo <a href="https://github.com/mozilla/rust/pull/8855">now does closure
capture</a> and very large structs.</li>
<li>A <a href="https://github.com/mozilla/rust/pull/8947">bunch</a>
<a href="https://github.com/mozilla/rust/pull/8927">of</a>
<a href="https://github.com/mozilla/rust/pull/8928">repr</a> improvements landed.</li>
</ul>


<h1>Meeting</h1>

<p>There was no meteting this week listed on the wiki or that I saw.</p>

<h1>Projects</h1>

<ul>
<li><a href="https://github.com/glycerine/rust-nanomsg">rust-nanomsg</a> &ndash; bindings to the
nanomsg library.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/31/this-week-in-rust/"/>
    <updated>2013-08-31T19:10:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/31/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the lucky 13th issue of <em>This Week in Rust</em>. Graydon has
stepped down as project lead. It seems to be a bit ambiguous whether he&rsquo;ll
still be working on the project. Brian (brson) will be taking over as lead.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<h2>Breaking Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8857">Some functions have been removed from
<code>std::str</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8823">The unit test framework now uses RUST_TEST_TASKS instead of
RUST_THREADS</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8718"><code>typeof</code> is now a reserved
keyword</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8807"><code>offset_inbounds</code> has been
removed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8797">Some edge cases with writing to a borrowed <code>&amp;mut</code> have been
closed</a>, rejecting more incorrect
programs.</li>
<li><a href="https://github.com/mozilla/rust/pull/8772">Option no longer implements
Add</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8700">Some pass handling stuff has
changed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8744">Enum descriminants are now always
u64</a>.</li>
</ul>


<h2>Other Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8750">String byte conversion functions which return an Option have been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8764">The main tutorial links to the condition and error handling
tutorials</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8438">A trait for default initialization has been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8757">debuginfo tests have been enabled on Windows, and debuginfo generation
works on Windows!</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8777">A better, more complete module tutorial has been
written</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8771">Some fixes to repr (the code that powers <code>%?</code> in fmt) have been
made</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8697"><code>rustpkg build</code> with no arguments now behaves a bit
differently</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8645"><code>std::run</code> has been reimplemented on top of
libuv</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8838">Frame pointer elimination has been
re-disabled</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8840">LLVM has been updated, giving us mingw-w64
support</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8819">Unit tests have been enabled on
Windows</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8802">Some compile speedups landed</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-27">Tuesday
meeting</a>
discussed rustpkg&rsquo;s timeline, extern fns, and LLVM asserts.</p>

<h1>Projects, discussion, and announcements</h1>

<ul>
<li>Jeaye says that anyone having problems with the q3 repo should re-clone. If
that doesn&rsquo;t fix it, pop into IRC: #q3 on irc.freenode.net.</li>
<li><a href="http://tim.dreamwidth.org/1820526.html">&ldquo;Making rustpkg work&rdquo;</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1lai9u/nphysics_a_2d_and_3d_rigid_body_physics_engine/">&ldquo;nphysics: a 2d and 3d rigid body physics engine for
Rust&rdquo;</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1l8hd4/first_university_computer_science_class_taught/">&ldquo;First university computer science class taught in
Rust&rdquo;</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/25/this-week-in-rust/"/>
    <updated>2013-08-25T12:54:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/25/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the 12th issue of <em>This Week in Rust</em>. Sorry for the
brevity, though most weeks are probably going to be like this, as I&rsquo;ve started
uni and have much less free time than in the summer.</p>

<!-- more -->


<h1>What&rsquo;s cooking in master?</h1>

<p>A whopping 71 pull requests were merged this week, and issue churn remains
negative at -32.</p>

<h2>Breaking changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8560"><strong><code>yield</code> is now reserved as a
keyword</strong></a>, with the hope of
maybe using it for generators.</li>
<li><a href="https://github.com/mozilla/rust/pull/8666">The type of <code>extern fn foo</code> is now <code>extern "C" fn</code>, rather than
<code>*u8</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8679">Some free functions in <code>extra::json</code> were turned into associated functions
on the Json enum</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8558"><code>XorShiftRng::new()</code> now uses a random
seed</a>. This is only breaking if
you were depending on that constant seed, which you shouldn&rsquo;t have.</li>
</ul>


<h2>Library changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8710"><code>extra::getopts</code> aligns based on codepoint count and not byte
count</a>, as a step towards more
correct unicode handling.</li>
<li><a href="https://github.com/mozilla/rust/pull/8637"><code>fprintf</code> has been added, as well as some <code>ifmt</code>
cleanup</a>.
<a href="https://github.com/mozilla/rust/pull/8740">The new runtime has seen a lot of
optimization</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8655">File IO has been added to the new
runtime</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8616">Some parsing errors related to ports have been fixed in
<code>extra::url</code></a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8590">CharIterator has seen some optimization too, with reverse iterators being
much closer in performance to forward iterators
now</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8602">sysconf names have been added for
android</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8631">The new runtime now has threadsafe
IO</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8566">A callback optimization has sped up message passing benchmarks to the tune
of 40%</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8584">jemalloc is back</a>.</li>
</ul>


<h2>Compiler changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8736">gnueabihf actually uses hard floats
now</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8695">Frame pointer elimination is no longer
disabled</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8684">Some debuginfo fixes landed</a>.
Supposedly, libstd can now be compiled with <code>-Z debug-info</code>. Yay!</li>
<li><a href="https://github.com/mozilla/rust/pull/8596">Stack unwinding on 32-bit windows now
works</a>. This is a major step
forward for Windows support, I&rsquo;m very excited to see it land.</li>
<li><a href="https://github.com/mozilla/rust/pull/8659">A handful of default method bugs have been
fixed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8562">Inheriting from kinds now sorta
works</a>, you can do <code>trait Foo:
Freeze</code>, for example.</li>
<li><a href="https://github.com/mozilla/rust/pull/8519">Supertrait methods can now be used from a trait
object</a>.</li>
<li>The rest of pnkfelix&rsquo;s visitor trait rewrite series landed.
<a href="https://github.com/mozilla/rust/pull/8539">2</a>,
<a href="https://github.com/mozilla/rust/pull/8619">3</a>,
<a href="https://github.com/mozilla/rust/pull/8623">4</a>, and
<a href="https://github.com/mozilla/rust/pull/8638">5</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8535">Foreign function wrappers have been
removed</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8328">LLVM has been updated</a>.</li>
</ul>


<h2>Docs etc</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8563">A new condition tutorial has been
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8725">Some docs for trait bounds have been
added</a>.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-20">Tuesday
meeting</a>
discussed cycle time and how to fix it.</p>

<h1>Projects and discussion</h1>

<ul>
<li><a href="https://github.com/bjz/gl-rs">gl-rs</a> is now ready for use, since the
foreign function wrappers have been removed!</li>
<li><p><a href="https://github.com/omasanori/msgpack-rust">msgpack-rust</a> has been created.
It ties into <code>extra::serialize</code>.</p></li>
<li><p><a href="https://github.com/jensnockert/dueboot">A template for Arduino Due
projects</a>.</p></li>
<li><a href="http://www.reddit.com/r/rust/comments/1kxz7y/benchmarks_round_two_parallel_go_rust_d_scala_and/">Parallel cross-language level generation
benchmarks</a>.</li>
<li><a href="http://www.reddit.com/r/rust/comments/1ktjrw/a_week_with_mozillas_rust/">A Week with
Rust</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Week in Rust]]></title>
    <link href="http://cmr.github.io/blog/2013/08/19/this-week-in-rust/"/>
    <updated>2013-08-19T00:33:00-04:00</updated>
    <id>http://cmr.github.io/blog/2013/08/19/this-week-in-rust</id>
    <content type="html"><![CDATA[<p>Hello and welcome to the 11th edition of <code>This Week in Rust</code>! I&rsquo;m starting uni
this week, so if you notice I&rsquo;m not quite as omnipresent and omniprescient as
usual, that&rsquo;d be why. <strong>Please</strong> <a href="mailto:corey@octayn.net">send me an email</a>
if you would like your pull request, project, or blog post mentioned. I would
hate to overlook something cool or important.</p>

<!-- more -->


<p>The Mozilla Intern talks happened this past week or so. The ones I know about
relating to Rust are:</p>

<ul>
<li><a href="https://air.mozilla.org/intern-presentation-sullivan/">Default Methods in Rust
(sully)</a></li>
<li><a href="https://air.mozilla.org/ben-blum-from-the-research-team-presents-types-of-types-in-rust/">Types of Types in Rust
(bblum)</a></li>
<li><a href="https://air.mozilla.org/2013-intern-todd/">A Work-stealing Runtime for Rust
(toddaaro)</a></li>
<li><a href="https://air.mozilla.org/eston-schweickart-from-the-research-team-presents-a-forest-of-quadtrees-the-graphics-of-servo/">A Forest of Quadtrees: The Graphics of
Servo</a></li>
<li><a href="https://air.mozilla.org/2013-intern-presentations-august-13/">Layout in Servo: Parallel and Rustic Tree Traversals
(eatkinson)</a></li>
<li><a href="https://air.mozilla.org/2013-intern-kuehn/">Architecting Servo: Pipelines and Parallelism
(tikue)</a></li>
</ul>


<p>Congratulations to them all. The interns did a ton of great work over the
summer.</p>

<h1>What&rsquo;s cooking on master?</h1>

<p>There were only 46 PRs merged this week. I don&rsquo;t quite know why that number is
so low this week. It certainly wasn&rsquo;t for lack of PRs: the queue has been
constantly backlogged. Issue churn was -26, yay!</p>

<h2>Breaking Changes</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8526">Some functions in Result and Either were replaced to work with external
iterators</a></li>
<li><a href="https://github.com/mozilla/rust/pull/8423">The <code>priv</code> and <code>pub</code> visibility modifiers are now forbidden on contexts
where they have no meaning</a>. For
example, marking a struct field <code>pub</code>, or a module <code>priv</code>. The compiler
errors for this are quite informative, and the conversion is purely
mechanical.</li>
<li><a href="https://github.com/mozilla/rust/pull/8532"><code>to_c_str</code> now raises a condition if the string contains interior <code>NUL</code>s,
as it is impossible to create a valid C string with interior
<code>NUL</code>s</a>.</li>
</ul>


<h2>Library improvments, bugfixes, and cleanup</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8446"><code>ifmt!</code>, the new formatter, has been
finished</a>. Yay!</li>
<li><a href="https://github.com/mozilla/rust/pull/8453"><code>extra::stats::write_boxplot</code> now works with negative or zero sample
values</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8452">Some missing pieces in libstd have been filled
in</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8491">A <code>sample</code> method has been added to <code>RngUtil</code>, for resevior
sampling</a>.</li>
</ul>


<h2>Compiler improvements, bugfixes, and cleanup</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8527">A ton of work was done on a new
visitor</a>. This is the first of a
series of five.</li>
<li><a href="https://github.com/mozilla/rust/pull/8483">Vector repeat exprs (<code>[0, ..16]</code>) are now allowed in
statics</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8477">A hint has been added for incorrect use of static
methods</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8497">Trait object coercion to <code>&amp;Trait</code> has been fixed to handle freezing and
reborrowing more correctly</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8329">Debuginfo of lexical scopes and variable shadowing has been massively
improved</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8410">A <code>--target-cpu</code> flag has been added to select the target CPU, rather than
always using &ldquo;generic&rdquo;</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8455">Support for owned and borrowed trait objects has been made better
added</a>.</li>
<li><a href="https://github.com/mozilla/rust/pull/8421">An <code>address_insignificant</code> attribute has been
added</a>. LLVM will do merging of
statics marked with that attribute.</li>
<li><a href="https://github.com/mozilla/rust/pull/8408">Intrinsics for checked overflow on add, sub, and mul have been
added</a>.</li>
</ul>


<h2>Tools, documentation, etc</h2>

<ul>
<li><a href="https://github.com/mozilla/rust/pull/8469">The tutorial was translated into
Japanese</a>. I think this is the
first translation of anything, so it&rsquo;s a pretty big milestone I think.</li>
</ul>


<h1>Meeting</h1>

<p>The <a href="https://github.com/mozilla/rust/wiki/Meeting-weekly-2013-08-13">Tuesday
meeting</a>
discussed turning jemalloc back on, default arguments, and method invocation
ordering. It also discussed the new IO code and stage0 stdtest.</p>

<h1>Notable discourse</h1>

<ul>
<li><a href="http://bluishcoder.co.nz/2013/08/15/phantom_types_in_rust.html">Phantom Types in
Rust</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1k6hua/rustdev_rfc_runtimeless_libstd/">RFC: Runtimeless
libstd</a></li>
</ul>


<h1>External projects</h1>

<ul>
<li><a href="https://github.com/erickt/rust-elasticsearch">Bindings to elasticsearch</a></li>
<li><a href="https://github.com/erickt/rust-zmq">zeromq bindings have been updated</a></li>
<li><a href="https://github.com/huonw/spellck">A spellchecker for Rust code, written in Rust</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1kd8ah/rustencoding_character_encoding_support_for_rust/">rust-encoding: character encoding support for
Rust</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1kctjn/my_first_rust_program_vocabulary_trainer/">A simple vocabulary
trainer</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1k7mfn/rustdev_rustdoc_ng_95_done/"><code>rustdoc_ng</code>: 95%
done</a></li>
<li><a href="http://www.reddit.com/r/rust/comments/1k5kqx/some_pages_in_servo_as_of_20130810/">Some pages as rendered by
Servo</a></li>
<li><a href="https://github.com/jfager/d3cap">d3cap: a libpcap-based network activity
visualizer</a></li>
<li><a href="https://github.com/sfackler/rust-postgres">postgres bindings</a></li>
<li><a href="https://gist.github.com/luqmana/6264106">RemoteJoy: a program for remotely viewing the screen of your PlayStation
Portable</a>.
(<a href="http://i.imgur.com/9Kda25J.jpg">screnshot</a>)</li>
<li><a href="https://github.com/bjz/gl-rs">The new OpenGL loader is working, pending the function pointer
fix</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
